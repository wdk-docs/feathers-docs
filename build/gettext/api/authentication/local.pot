# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-22 19:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/api/authentication/local.rst:2
msgid "Local Authentication"
msgstr ""

#: ../../source/api/authentication/local.rst:4
msgid "|npm version| |Changelog|"
msgstr ""

#: ../../source/api/authentication/local.rst:10
msgid "[@feathersjs/authentication-local](https://github.com/feathersjs/authentication-local) is a server side module that wraps the `passport-local <https://github.com/jaredhanson/passport-local>`_ authentication strategy, which lets you authenticate with your Feathers application using a username and password."
msgstr ""

#: ../../source/api/authentication/local.rst:16
msgid "This module contains 3 core pieces:"
msgstr ""

#: ../../source/api/authentication/local.rst:18
msgid "The main initialization function"
msgstr ""

#: ../../source/api/authentication/local.rst:19
msgid "The ``hashPassword`` hook"
msgstr ""

#: ../../source/api/authentication/local.rst:20
msgid "The ``Verifier`` class"
msgstr ""

#: ../../source/api/authentication/local.rst:23
msgid "Configuration"
msgstr ""

#: ../../source/api/authentication/local.rst:25
msgid "In most cases initializing the module is as simple as doing this:"
msgstr ""

#: ../../source/api/authentication/local.rst:48
msgid "This will pull from your global authentication object in your config file. It will also mix in the following defaults, which can be customized."
msgstr ""

#: ../../source/api/authentication/local.rst:53
msgid "Options"
msgstr ""

#: ../../source/api/authentication/local.rst:72
msgid "When setting the ``usernameField`` to ``username`` in the :doc:`../configuration` the value *must* be escaped as ``\\\\username`` otherwise it will use the value of the ``username`` environment variable on Windows systems."
msgstr ""

#: ../../source/api/authentication/local.rst:78
msgid "hooks"
msgstr ""

#: ../../source/api/authentication/local.rst:81
msgid "hashPassword"
msgstr ""

#: ../../source/api/authentication/local.rst:83
msgid "This hook is used to hash plain text passwords before they are saved to the database. It uses the bcrypt algorithm by default but can be customized by passing your own ``options.hash`` function."
msgstr ""

#: ../../source/api/authentication/local.rst:88
msgid "**@feathersjs/authentication-local** does not allow to store clear text passwords. This means the ``hashPassword`` hook **must** be used when using the :ref:`local_verifier`."
msgstr ""

#: ../../source/api/authentication/local.rst:91
msgid "Available options are"
msgstr ""

#: ../../source/api/authentication/local.rst:93
msgid "``passwordField`` (default: ``'password'``) - key name of password field to look on context.data"
msgstr ""

#: ../../source/api/authentication/local.rst:95
msgid "``hash`` (default: bcrypt hash function) - Takes in a password and returns a hash."
msgstr ""

#: ../../source/api/authentication/local.rst:111
msgid "protect"
msgstr ""

#: ../../source/api/authentication/local.rst:113
msgid "The protect hook makes sure that protected fields don’t get sent to a client."
msgstr ""

#: ../../source/api/authentication/local.rst:127
msgid "Verifier"
msgstr ""

#: ../../source/api/authentication/local.rst:129
msgid "This is the verification class that does the actual username and password verification by looking up the entity (normally a ``user``) on a given service by the ``usernameField`` and compares the hashed password using bcrypt. It has the following methods that can all be overridden. All methods return a promise except ``verify``, which has the exact same signature as `passport-local <https://github.com/jaredhanson/passport-local>`_."
msgstr ""

#: ../../source/api/authentication/local.rst:146
msgid "The ``Verifier`` class can be extended so that you customize it’s behavior without having to rewrite and test a totally custom local Passport implementation. Although that is always an option if you don’t want use this plugin."
msgstr ""

#: ../../source/api/authentication/local.rst:151
msgid "An example of customizing the Verifier:"
msgstr ""

#: ../../source/api/authentication/local.rst:173
msgid "Client Usage"
msgstr ""

#: ../../source/api/authentication/local.rst:176
msgid "authentication-client"
msgstr ""

#: ../../source/api/authentication/local.rst:178
msgid "When this module is registered server side, using the default config values this is how you can authenticate using :doc:`./client`."
msgstr ""

#: ../../source/api/authentication/local.rst:193
msgid "HTTP Request"
msgstr ""

#: ../../source/api/authentication/local.rst:195
msgid "If you are not using the ``@feathersjs/authentication-client`` and you have registered this module server side, make a ``POST`` request to ``/authentication`` with the following payload:"
msgstr ""

#: ../../source/api/authentication/local.rst:208
msgid "Here is what that looks like with curl:"
msgstr ""

#: ../../source/api/authentication/local.rst:215
msgid "Sockets"
msgstr ""

#: ../../source/api/authentication/local.rst:217
msgid "Authenticating using a local strategy via sockets is done by emitting the following message:"
msgstr ""

