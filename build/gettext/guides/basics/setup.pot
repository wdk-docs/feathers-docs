# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-22 12:25+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/guides/basics/setup.rst:2
msgid "Setting up"
msgstr ""

#: ../../source/guides/basics/setup.rst:4
msgid "In this section we will go over the required tools and preliminary knowledge for best learning Feathers."
msgstr ""

#: ../../source/guides/basics/setup.rst:8
msgid "Prerequisites"
msgstr ""

#: ../../source/guides/basics/setup.rst:10
msgid "Feathers and most plug-ins work on `NodeJS <https://nodejs.org/en/>`_ v6.0.0 and up. For the guides we will use syntax that only works with Node v8.0.0 and later. On MacOS and other Unix systems the `Node Version Manager <https://github.com/creationix/nvm>`_ is a good way to quickly install the latest version of NodeJS and keep it up to date."
msgstr ""

#: ../../source/guides/basics/setup.rst:16
msgid "After successful installation, the ``node`` and ``npm`` commands should be available on the terminal and show something similar when running the following commands:"
msgstr ""

#: ../../source/guides/basics/setup.rst:30
msgid "Feathers does work in the browser and supports IE 10 and up. The examples used in this guide will however only work in the most recent versions of Chrome, Firefox, Safari and Edge."
msgstr ""

#: ../../source/guides/basics/setup.rst:35
msgid "What you should know"
msgstr ""

#: ../../source/guides/basics/setup.rst:37
msgid "Readers should have reasonable JavaScript experience using `ES6 <http://es6-features.org/>`_ and some experience with NodeJS and the JavaScript features it supports like the `module system <https://nodejs.org/api/modules.html>`_. Some familiarity with HTTP and `REST APIs <https://en.wikipedia.org/wiki/Representational_state_transfer>`_ as well as websockets is also helpful."
msgstr ""

#: ../../source/guides/basics/setup.rst:45
msgid "The guide examples use `async/await <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function>`_. Familiarity with `Promises <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise>`_ and ``async/await`` (and how they interact) is highly recommended. For a good introduction to JavaScript promises see `promisejs.org <https://www.promisejs.org/>`_ and then follow up with ``async/await`` in `this blog post <https://blog.risingstack.com/mastering-async-await-in-nodejs/>`_."
msgstr ""

#: ../../source/guides/basics/setup.rst:55
msgid "Feathers works standalone but also provides :doc:`../../api/express` with `Express <http://expressjs.com/>`_. This guide does not require any in-depth knowledge of Express but some experience with Express will be helpful in the future (see the `Express guide <http://expressjs.com/en/guide/routing.html>`_ to get started)."
msgstr ""

#: ../../source/guides/basics/setup.rst:62
msgid "What we won’t cover"
msgstr ""

#: ../../source/guides/basics/setup.rst:64
msgid "Although Feathers works with many databases, this guide will only use examples of standalone database adapters so there is no need to run a database server."
msgstr ""

#: ../../source/guides/basics/setup.rst:68
msgid "Authentication will be shown later in the :doc:`../chat/readme`."
msgstr ""

#: ../../source/guides/basics/setup.rst:70
msgid "All examples will reside within a single file. The Feathers generator (CLI) will create a recommended structure for a Feathers application. You can see what it does to structure an application in the :doc:`../chat/readme`."
msgstr ""

#: ../../source/guides/basics/setup.rst:75
msgid "What’s next?"
msgstr ""

#: ../../source/guides/basics/setup.rst:77
msgid "All set up and good to go? Let’s :doc:`starting`."
msgstr ""

