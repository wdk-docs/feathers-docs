# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-25 16:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/client/primus.rst:2
msgid "Primus Client"
msgstr "Primus 客户端"

#: ../../source/api/client/primus.rst:4
msgid ""
"We recommend using Feathers and the ``@feathersjs/primus-client`` module "
"on the client if possible. To use a direct Primus connection without "
"using Feathers on the client however see the `Direct connection <#direct-"
"connection>`_ section."
msgstr ""
"如果可能的话, 我们建议在客户端上使用Feathers和 ``feathersress/primus-client`` 模块.要在客户端上不使用Feathers而直接使用Primus连接, 请参阅 `直接连接 <#direct-"
"connection>`_ 部分."

#: ../../source/api/client/primus.rst:10
msgid "Loading the Primus client library"
msgstr "加载Primus客户端库"

#: ../../source/api/client/primus.rst:12
msgid ""
"In the browser the Primus client library (usually at "
"``primus/primus.js``) always has to be loaded using a ``<script>`` tag:"
msgstr "在浏览器中, Primus客户端库(通常位于 ``primus/primus.js``)总是必须使用 ``<script>`` 标签加载:"

#: ../../source/api/client/primus.rst:20
msgid ""
"This will make the ``Primus`` object globally available. Module loader "
"options are currently not available."
msgstr "这将使 ``Primus`` 对象全局可用.模块加载程序选项目前不可用."

#: ../../source/api/client/primus.rst:24
msgid "Client use in NodeJS"
msgstr "客户端在NodeJS中使用"

#: ../../source/api/client/primus.rst:26
msgid "In NodeJS a Primus client can be initialized as follows:"
msgstr "在NodeJS中, 可以按如下方式初始化Primus客户端:"

#: ../../source/api/client/primus.rst:41
msgid "@feathersjs/primus-client"
msgstr "@feathersjs/primus-client"

#: ../../source/api/client/primus.rst:43
msgid "|GitHub stars| |npm version| |Changelog|"
msgstr "|GitHub stars| |npm version| |Changelog|"

#: ../../source/api/client/primus.rst:49
msgid ""
"The ``@feathersjs/primus-client`` module allows to connect to services "
"exposed through the :doc:`primus` via the configured websocket library."
msgstr "``@feathersjs/primus-client`` 模块允许通过配置的websocket库连接到通过 :doc:`primus` 公开的服务."

#: ../../source/api/client/primus.rst:53
msgid ""
"Primus sockets are also used to *call* service methods. Using sockets for"
" both, calling methods and receiving real-time events is generally faster"
" than using :doc:`./rest` and there is no need to use both, REST and "
"websockets in the same client application at the same time."
msgstr ""
"Primus套接字也用于 *call* 服务方法.使用套接字, 调用方法和接收实时事件通常比使用 :doc:`./rest` 更快, 并且不需要同时在同一客户端应用程序中同时使用REST和websockets."

#: ../../source/api/client/primus.rst:60
msgid "``primus(socket)``"
msgstr "``primus(socket)``"

#: ../../source/api/client/primus.rst:62
msgid "Initialize the Primus client using a given socket and the default options."
msgstr "使用给定套接字和默认选项初始化Primus客户端."

#: ../../source/api/client/primus.rst:104
msgid "``primus(socket, options)``"
msgstr "``primus(socket, options)``"

#: ../../source/api/client/primus.rst:106
msgid "Initialize the Primus client using a given socket and the given options."
msgstr "使用给定套接字和给定选项初始化Primus客户端."

#: ../../source/api/client/primus.rst:108
msgid "Options can be:"
msgstr "选项可以:"

#: ../../source/api/client/primus.rst:110
msgid ""
"``timeout`` (default: 5000ms) - The time after which a method call fails "
"and times out. This usually happens when calling a service or service "
"method that does not exist."
msgstr "``timeout`` (默认值:5000ms) - 方法调用失败并超时的时间.这通常在调用不存在的服务或服务方法时发生."

#: ../../source/api/client/primus.rst:122
msgid "The timeout per service can be changed like this:"
msgstr "每个服务的超时可以像这样改变:"

#: ../../source/api/client/primus.rst:129
msgid "Direct connection"
msgstr "直接连接"

#: ../../source/api/client/primus.rst:131
msgid ""
"In the browser, the connection can be established by loading the client "
"from ``primus/primus.js`` and instantiating a new ``Primus`` instance. "
"Unlike HTTP calls, websockets do not have a cross-origin restriction in "
"the browser so it is possible to connect to any Feathers server."
msgstr ""
"在浏览器中, 可以通过从 ``primus/primus.js`` 加载客户端并实例化一个新的 ``Primus`` 实例来建立连接.与HTTP调用不同, websockets在浏览器中没有跨源限制, 因此可以连接到任何Feathers服务器."

#: ../../source/api/client/primus.rst:136
msgid ""
"See the `Primus docs <https://github.com/primus/primus#connecting-from-"
"the-browser>`_ for more details."
msgstr ""
"有关详细信息, 请参阅 `Primus 文档 <https://github.com/primus/primus#connecting-from-the-browser>`_."

#: ../../source/api/client/primus.rst:139
msgid ""
"The socket connection URL has to point to the server root which is where "
"Feathers will set up Primus."
msgstr "套接字连接URL必须指向服务器根目录, 这是Feathers将设置Primus的地方."

#: ../../source/api/client/primus.rst:149
msgid ""
"Service methods can be called by emitting a "
"``<servicepath>::<methodname>`` event with the method parameters. "
"``servicepath`` is the name the service has been registered with (in "
"``app.use``) without leading or trailing slashes. An optional callback "
"following the ``function(error, data)`` Node convention will be called "
"with the result of the method call or any errors that might have "
"occurred."
msgstr ""
"可以通过使用方法参数发出 ``<servicepath>::<methodname>`` 事件来调用服务方法. ``servicepath`` 是服务已注册的名称(在 ``app.use`` 中), 没有前导或尾随斜杠.将使用方法调用的结果或可能发生的任何错误调用 ``function(error, data)`` Node约定之后的可选回调."

#: ../../source/api/client/primus.rst:157
msgid ""
"``params`` will be set as ``params.query`` in the service method call. "
"Other service parameters can be set through a :doc:`primus`."
msgstr "``params`` 将在服务方法调用中设置为 ``params.query``.其他服务参数可以通过 :doc:`primus` 设置."

#: ../../source/api/client/primus.rst:161
msgid "Authentication"
msgstr "认证"

#: ../../source/api/client/primus.rst:163
msgid ""
"Sockets can be authenticated by sending the ``authenticate`` event with "
"the ``strategy`` and the payload. For specific examples see the “Direct "
"Connection” section in the :doc:`../authentication/jwt` authentication "
"chapters."
msgstr ""
"可以通过发送带有 ``strategy`` 和 payload 的 ``authenticate`` 事件来验证套接字.有关具体示例, 请参阅 :doc:`../authentication/jwt` 身份验证章节中的“直接连接”部分."

#: ../../source/api/client/primus.rst:180
msgid "``find``"
msgstr "``find``"

#: ../../source/api/client/primus.rst:182
msgid "Retrieves a list of all matching resources from the service"
msgstr "从服务中检索所有匹配资源的列表"

#: ../../source/api/client/primus.rst:190
msgid ""
"Will call ``app.service('messages').find({ query: { status: 'read', user:"
" 10 } })`` on the server."
msgstr ""
"将在服务器上调用 ``app.service('messages').find({ query: { status: 'read', user: 10 } })``."

#: ../../source/api/client/primus.rst:195
msgid "get"
msgstr "get"

#: ../../source/api/client/primus.rst:197
msgid "Retrieve a single resource from the service."
msgstr "从服务中检索单个资源."

#: ../../source/api/client/primus.rst:205
msgid "Will call ``app.service('messages').get(1, {})`` on the server."
msgstr "将在服务器上调用 ``app.service('messages').get(1, {})``."

#: ../../source/api/client/primus.rst:213
msgid ""
"Will call ``app.service('messages').get(1, { query: { fetch: 'all' } })``"
" on the server."
msgstr "将在服务器上调用 ``app.service('messages').get(1, {query:{fetch:'all'}})``."

#: ../../source/api/client/primus.rst:218
msgid "create"
msgstr "create"

#: ../../source/api/client/primus.rst:220
msgid "Create a new resource with ``data`` which may also be an array."
msgstr "使用 ``data`` 创建一个新资源, 它也可以是一个数组."

#: ../../source/api/client/primus.rst:230
msgid ""
"Will call ``app.service('messages').create({ \"text\": \"I really have to"
" iron\" }, {})`` on the server."
msgstr "将在服务器上调用 ``app.service('messages').create({ \"text\": \"I really have to iron\" }, {})``"

#: ../../source/api/client/primus.rst:241
msgid "Will call ``app.service('messages').create`` on the server with the array."
msgstr "将在带有数组的服务器上调用 ``app.service('messages').create``."

#: ../../source/api/client/primus.rst:245
msgid "update"
msgstr ""

#: ../../source/api/client/primus.rst:247
msgid "Completely replace a single or multiple resources."
msgstr "完全替换单个或多个资源."

#: ../../source/api/client/primus.rst:257
msgid ""
"Will call ``app.service('messages').update(2, { \"text\": \"I really have"
" to do laundry\" }, {})`` on the server. The ``id`` can also be ``null`` "
"to update multiple resources:"
msgstr ""
"将在服务器上调用 ``app.service('messages').update(2, { \"text\": \"I really have to do laundry\" }, {})``. ``id`` 也可以是 ``null`` 来更新多个资源:"

#: ../../source/api/client/primus.rst:268
msgid ""
"Will call ``app.service('messages').update(null, { complete: true }, { "
"query: { complete: false } })`` on the server."
msgstr "将在服务器上调用 ``app.service('messages').update(null, {complete:true}, {query:{complete:false}})``."

#: ../../source/api/client/primus.rst:272
msgid ""
"``update`` is normally expected to replace an entire resource which is "
"why the database adapters only support ``patch`` for multiple records."
msgstr "通常希望 ``update`` 替换整个资源, 这就是数据库适配器仅支持多个记录的 ``patch`` 的原因."

#: ../../source/api/client/primus.rst:277
msgid "patch"
msgstr ""

#: ../../source/api/client/primus.rst:279
msgid ""
"Merge the existing data of a single or multiple resources with the new "
"``data``."
msgstr "使用新的 ``data`` 合并单个或多个资源的现有数据."

#: ../../source/api/client/primus.rst:290
msgid ""
"Will call ``app.service('messages').patch(2, { \"read\": true }, {})`` on"
" the server. The ``id`` can also be ``null`` to update multiple "
"resources:"
msgstr ""
"将在服务器上调用 ``app.service('messages').patch(2, {\\“read \\”:true}, {})``. "
"``id`` 也可以是 ``null`` 来更新多个资源:"

#: ../../source/api/client/primus.rst:304
msgid ""
"Will call ``app.service('messages').patch(null, { complete: true }, { "
"query: { complete: false } })`` on the server to change the status for "
"all read app.service(‘messages’)."
msgstr ""
"将在服务器上调用 ``app.service('messages').patch(null, { complete: true }, { query: { complete: false } })`` 来改变所有 read"
" app.service(‘messages’)."

#: ../../source/api/client/primus.rst:308
msgid "This is supported out of the box by the Feathers :doc:`../readme`"
msgstr "这是由Feathers :doc:`../readme` 开箱即用的"

#: ../../source/api/client/primus.rst:311
msgid "remove"
msgstr "remove"

#: ../../source/api/client/primus.rst:313
msgid "Remove a single or multiple resources:"
msgstr "删除一个或多个资源:"

#: ../../source/api/client/primus.rst:321
msgid ""
"Will call ``app.service('messages').remove(2, { query: { cascade: true } "
"})`` on the server. The ``id`` can also be ``null`` to remove multiple "
"resources:"
msgstr ""
"将在服务器上调用 ``app.service('messages').remove(2, {query:{cascade:true}})``. "
" ``id`` 也可以是 ``null`` 来删除多个资源:"

#: ../../source/api/client/primus.rst:330
msgid ""
"Will call ``app.service('messages').remove(null, { query: { read: 'true' "
"} })`` on the server to delete all read app.service(‘messages’)."
msgstr ""
"将调用 ``app.service('messages').remove(null, { query: { read: 'true' } })`` 在服务器上删除所有 read"
" app.service('messages')."

#: ../../source/api/client/primus.rst:335
msgid "Listening to events"
msgstr "监听事件"

#: ../../source/api/client/primus.rst:337
msgid ""
"Listening to service events allows real-time behaviour in an application."
" :doc:`../events` are sent to the socket in the form of ``servicepath "
"eventname``."
msgstr "通过监听服务事件, 可以在应用程序中实现实时行为. :doc:`events` 以 ``servicepath eventname`` 的形式发送到套接字."

#: ../../source/api/client/primus.rst:342
msgid "created"
msgstr "created"

#: ../../source/api/client/primus.rst:344
msgid ""
"The ``created`` event will be published with the callback data when a "
"service ``create`` returns successfully."
msgstr "当服务 ``create`` 成功返回时, ``created`` 事件将与回调数据一起发布."

#: ../../source/api/client/primus.rst:354
msgid "updated, patched"
msgstr "updated, patched"

#: ../../source/api/client/primus.rst:356
msgid ""
"The ``updated`` and ``patched`` events will be published with the "
"callback data when a service ``update`` or ``patch`` method calls back "
"successfully."
msgstr "当服务 ``update`` 或 ``patch`` 方法成功回调时, ``updated`` 和 ``patched`` 事件将与回调数据一起发布."

#: ../../source/api/client/primus.rst:373
msgid "removed"
msgstr "removed"

#: ../../source/api/client/primus.rst:375
msgid ""
"The ``removed`` event will be published with the callback data when a "
"service ``remove`` calls back successfully."
msgstr "当服务 ``remove`` 成功回调时, ``removed`` 事件将与回调数据一起发布."
