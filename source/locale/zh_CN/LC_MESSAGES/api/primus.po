# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-21 16:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/primus.rst:2
msgid "Primus"
msgstr "Primus"

#: ../../source/api/primus.rst:4
msgid "|npm version| |Changelog|"
msgstr ""

#: ../../source/api/primus.rst:10
msgid ""
"The [@feathersjs/primus](https://github.com/feathersjs/primus) module "
"allows to call :doc:`./services` and receive :doc:`./events` via `Primus "
"<https://github.com/primus/primus>`_, a universal wrapper for real-time "
"frameworks that supports Engine.IO, WebSockets, Faye, BrowserChannel, "
"SockJS and Socket.IO."
msgstr "[@feathersjs/primus](https://github.com/feathersjs/primus)模块允许调用 :doc:`./services` 并通过 `Primus <https://github.com/primus/primus>`_ 接收 :doc:`./events` , 支持Engine.IO, WebSockets, Faye, BrowserChannel, SockJS和Socket.IO的实时框架的通用包装器."

#: ../../source/api/primus.rst:17
msgid ""
"This page describes how to set up Primus server. The "
":doc:`./client/primus` shows how to connect to this server on the client "
"and the message format for service calls and real-time events."
msgstr "本页介绍如何设置Primus服务器. :doc:`./client/primus` 显示了如何在客户端连接到此服务器以及服务调用和实时事件的消息格式."

#: ../../source/api/primus.rst:23
msgid "Configuration"
msgstr "配置"

#: ../../source/api/primus.rst:25
msgid ""
"Additionally to ``@feathersjs/primus`` your websocket library of choice "
"also has to be installed."
msgstr ""
"除了 ``@feathersjs/primus`` 之外, 还必须安装您选择的websocket库."

#: ../../source/api/primus.rst:33
msgid "app.configure(primus(options))"
msgstr "app.configure(primus(options))"

#: ../../source/api/primus.rst:35
msgid ""
"Sets up the Primus transport with the given `Primus options "
"<https://github.com/primus/primus>`_."
msgstr ""
"使用给定的 `Primus选项 <https://github.com/primus/primus>`_ 设置Primus传输."

#: ../../source/api/primus.rst:38
msgid ""
"Once the server has been started with ``app.listen()`` or "
"``app.setup(server)`` the Primus server object is available as "
"``app.primus``."
msgstr ""
"一旦服务器启动了 ``app.listen()`` 或 ``app.setup(server)``, Primus服务器对象就可以作为 ``app.primus`` 使用."

#: ../../source/api/primus.rst:55
msgid "app.configure(primus(options, callback))"
msgstr "app.configure(primus(options, callback))"

#: ../../source/api/primus.rst:57
msgid ""
"Sets up the Primus transport with the given `Primus options "
"<https://github.com/primus/primus>`_ and calls the callback with the "
"Primus server instance."
msgstr ""
"使用给定的 `Primus选项 <https://github.com/primus/primus>`_ 设置Primus传输, 并使用Primus服务器实例调用回调."

#: ../../source/api/primus.rst:78
msgid "params"
msgstr "params"

#: ../../source/api/primus.rst:80
msgid ""
"The Primus request object has a ``feathers`` property that can be "
"extended with additional service ``params`` during authorization:"
msgstr ""
"Primus请求对象有一个 ``feathers`` 属性, 可以在授权期间使用附加服务 ``params`` 进行扩展:"

#: ../../source/api/primus.rst:103
msgid "``params.provider``"
msgstr "``params.provider``"

#: ../../source/api/primus.rst:105
msgid ""
"For any :doc:`./services` made through a Primus socket "
"``params.provider`` will be set to ``primus``. In a :doc:`./hooks` this "
"can for example be used to prevent external users from making a service "
"method call:"
msgstr "对于任何 :doc:`./services` 通过Primus套接字 ``params.provider`` 将被设置为 ``primus``.在a :doc:`./hooks` 中, 这可以用来防止外部用户进行服务方法调用:"

#: ../../source/api/primus.rst:124
msgid "``params.query``"
msgstr "``params.query``"

#: ../../source/api/primus.rst:126
msgid "``params.query`` will contain the query parameters sent from the client."
msgstr "``params.query`` 将包含从客户端发送的查询参数."

#: ../../source/api/primus.rst:128
msgid ""
"Only ``params.query`` is passed between the server and the client, other "
"parts of ``params`` are not. This is for security reasons so that a "
"client can’t set things like ``params.user`` or the database options. You"
" can always map from ``params.query`` to :doc:`./hooks`."
msgstr "服务器和客户端之间只传递 ``params.query``, 而 ``params`` 的其他部分则没有.这是出于安全原因, 因此客户端无法设置 ``params.user`` 或数据库选项.你总是可以从 ``params.query`` 映射到 :doc:`./hooks`."

#: ../../source/api/primus.rst:135
msgid "params.connection"
msgstr "params.connection"

#: ../../source/api/primus.rst:137
msgid ""
"``params.connection`` is the connection object that can be used with "
":doc:`./channels`. It is the same object as ``req.feathers`` in a Primus "
"middleware as `shown in the ``params`` section <#params>`_."
msgstr "``params.connection`` 是可以与 :doc:`./channels` 一起使用的连接对象.它与Primus中间件中的 ``req.feathers`` 是相同的对象, 如 `params 部分所示 <#params>`_ ."

#~ msgid ""
#~ "The [@feathersjs/primus](https://github.com/feathersjs/primus)"
#~ " module allows to call :doc:`./services`"
#~ " and receive `real-time events "
#~ "<./events.md>`_ via `Primus "
#~ "<https://github.com/primus/primus>`_, a universal "
#~ "wrapper for real-time frameworks that"
#~ " supports Engine.IO, WebSockets, Faye, "
#~ "BrowserChannel, SockJS and Socket.IO."
#~ msgstr ""

#~ msgid ""
#~ "**Important:** This page describes how "
#~ "to set up Primus server. The "
#~ ":doc:`./client/primus` shows how to connect"
#~ " to this server on the client "
#~ "and the message format for service "
#~ "calls and real-time events."
#~ msgstr ""

#~ msgid ""
#~ "For any :doc:`./services` made through a"
#~ " Primus socket ``params.provider`` will be"
#~ " set to ``primus``. In a `hook "
#~ "<./hooks.md>`_ this can for example be"
#~ " used to prevent external users from"
#~ " making a service method call:"
#~ msgstr ""

#~ msgid ""
#~ "**Important:** Only ``params.query`` is passed"
#~ " between the server and the client,"
#~ " other parts of ``params`` are not."
#~ " This is for security reasons so "
#~ "that a client can’t set things "
#~ "like ``params.user`` or the database "
#~ "options. You can always map from "
#~ "``params.query`` to ``params`` in a "
#~ "before :doc:`./hooks`."
#~ msgstr ""

