# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-22 19:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/databases/common.rst:2
msgid "Common API"
msgstr "通用API"

#: ../../source/api/databases/common.rst:4
msgid ""
"All database adapters implement a common interface for initialization, "
"pagination, extending and querying. This chapter describes the common "
"adapter initialization and options, how to enable and use pagination, the"
" details on how specific service methods behave and how to extend an "
"adapter with custom functionality."
msgstr "所有数据库适配器都实现了用于初始化，分页，扩展和查询的通用接口。本章介绍常见的适配器初始化和选项，如何启用和使用分页，有关特定服务方法的行为以及如何使用自定义功能扩展适配器的详细信息。"

#: ../../source/api/databases/common.rst:10
msgid ""
"Every database adapter is an implementation of the :doc:`../services`. We"
" recommend being familiar with services, service events and hooks before "
"using a database adapter."
msgstr ""

#: ../../source/api/databases/common.rst:18
msgid "``service([options])``"
msgstr "``service([options])``"

#: ../../source/api/databases/common.rst:20
msgid "Returns a new service instance initialized with the given options."
msgstr "返回使用给定选项初始化的新服务实例。"

#: ../../source/api/databases/common.rst:29
msgid "**Options:**"
msgstr "**Options:**"

#: ../../source/api/databases/common.rst:31
msgid ""
"``id`` (*optional*) - The name of the id field property (usually set by "
"default to ``id`` or ``_id``)."
msgstr ""
"``id`` (*optional*) - The name of the id field property (usually set by "
"default to ``id`` or ``_id``)."

#: ../../source/api/databases/common.rst:33
msgid ""
"``events`` (*optional*) - A list of `custom service events <../events"
"#custom-events>`_ sent by this service"
msgstr ""
"``events`` (*optional*) - A list of `custom service events <../events"
"#custom-events>`_ sent by this service"

#: ../../source/api/databases/common.rst:35
msgid ""
"``paginate`` (*optional*) - A `pagination object <#pagination>`_ "
"containing a ``default`` and ``max`` page size"
msgstr ""
"``paginate`` (*optional*) - A `pagination object <#pagination>`_ "
"containing a ``default`` and ``max`` page size"

#: ../../source/api/databases/common.rst:37
msgid ""
"``whitelist`` (*optional*) - A list of additional non-standard query "
"parameters to allow (e.g ``[ '$regex', '$populate' ]``)"
msgstr ""
"``whitelist`` (*optional*) - A list of additional non-standard query "
"parameters to allow (e.g ``[ '$regex', '$populate' ]``)"

#: ../../source/api/databases/common.rst:39
msgid ""
"``multi`` (*optional*, default: ``false``) - Allow ``create`` with arrays"
" and ``update`` and ``remove`` with id ``null`` to change multiple items."
" Can be ``true`` for all methods or an array of allowed methods (e.g. ``["
" 'remove', 'create' ]``)"
msgstr ""
"``multi``（* optional *，default：``false``） - "
"允许带有数组的``create``和带有``null``的``update``和``remove``来改变多个项目。对于所有方法或一组允许的方法都可以是``true``（例如``''remove'，'create']``"

#: ../../source/api/databases/common.rst:45
msgid "Pagination"
msgstr "Pagination"

#: ../../source/api/databases/common.rst:47
msgid ""
"When initializing an adapter you can set the following pagination options"
" in the ``paginate`` object:"
msgstr ""
"When initializing an adapter you can set the following pagination options"
" in the ``paginate`` object:"

#: ../../source/api/databases/common.rst:50
msgid "``default`` - Sets the default number of items when ``$limit`` is not set"
msgstr "``default`` - Sets the default number of items when ``$limit`` is not set"

#: ../../source/api/databases/common.rst:52
msgid ""
"``max`` - Sets the maximum allowed number of items per page (even if the "
"``$limit`` query parameter is set higher)"
msgstr ""
"``max`` - Sets the maximum allowed number of items per page (even if the "
"``$limit`` query parameter is set higher)"

#: ../../source/api/databases/common.rst:55
msgid ""
"When ``paginate.default`` is set, ``find`` will return an *page object* "
"(instead of the normal array) in the following form:"
msgstr ""
"When ``paginate.default`` is set, ``find`` will return an *page object* "
"(instead of the normal array) in the following form:"

#: ../../source/api/databases/common.rst:67
msgid "The pagination options can be set as follows:"
msgstr "The pagination options can be set as follows:"

#: ../../source/api/databases/common.rst:96
msgid ""
"Disabling or changing the default pagination is not available in the "
"client. Only ``params.query`` is passed to the server (also see a "
"`workaround here "
"<https://github.com/feathersjs/feathers/issues/382#issuecomment-238407741>`_)"
msgstr "客户端中不提供禁用或更改默认分页的功能。只有``params.query``被传递给服务器（另见这里的解决方法<https://github.com/feathersjs/feathers/issues/382#issuecomment-238407741>`_）"

#: ../../source/api/databases/common.rst:100
#, fuzzy
msgid ""
"To just get the number of available records set ``$limit`` to ``0``. This"
" will only run a (fast) counting query against the database."
msgstr ""
"**Pro tip:** To just get the number of available records set ``$limit`` "
"to ``0``. This will only run a (fast) counting query against the "
"database."

#: ../../source/api/databases/common.rst:105
msgid "Service methods"
msgstr "Service methods"

#: ../../source/api/databases/common.rst:107
#, fuzzy
msgid ""
"This section describes specifics on how the :doc:`../services` are "
"implemented for all adapters."
msgstr ""
"This section describes specifics on how the :doc:`services` are "
"implemented for all adapters."

#: ../../source/api/databases/common.rst:110
msgid "adapter.Model"
msgstr "adapter.Model"

#: ../../source/api/databases/common.rst:112
msgid ""
"If the ORM or database supports models, the model instance or reference "
"to the collection belonging to this adapter can be found in "
"``adapter.Model``. This allows to easily make custom queries using that "
"model, e.g. in a hook:"
msgstr "如果ORM或数据库支持模型，则可以在``adapter.Model``中找到模型实例或属于此适配器的集合的引用。这允许使用该模型轻松地进行自定义查询，例如，在钩子里："

#: ../../source/api/databases/common.rst:137
msgid "adapter.find(params)"
msgstr "adapter.find(params)"

#: ../../source/api/databases/common.rst:139
msgid ""
"``adapter.find(params) -> Promise`` returns a list of all records "
"matching the query in :doc:`./querying`. Will either return an array with"
" the results or a page object if `pagination is enabled <#pagination>`_."
msgstr ""

#: ../../source/api/databases/common.rst:143
#, fuzzy
msgid ""
"When used via REST URLs all query values are strings. Depending on the "
"database the values in ``params.query`` might have to be converted to the"
" right type in a :doc:`../hooks`."
msgstr ""
"**Important**: When used via REST URLs all query values are strings. "
"Depending on the database the values in :doc:`hooks`."

#: ../../source/api/databases/common.rst:165
msgid "Find all messages for user with id 1"
msgstr "Find all messages for user with id 1"

#: ../../source/api/databases/common.rst:171
msgid "Find all messages belonging to room 1 or 3"
msgstr "Find all messages belonging to room 1 or 3"

#: ../../source/api/databases/common.rst:178
msgid "adapter.get(id, params)"
msgstr "adapter.get(id, params)"

#: ../../source/api/databases/common.rst:180
msgid ""
"``adapter.get(id, params) -> Promise`` retrieves a single record by its "
"unique identifier (the field set in the ``id`` option during "
"initialization)."
msgstr ""
"``adapter.get(id, params) -> Promise`` retrieves a single record by its "
"unique identifier (the field set in the ``id`` option during "
"initialization)."

#: ../../source/api/databases/common.rst:194
msgid "adapter.create(data, params)"
msgstr "adapter.create(data, params)"

#: ../../source/api/databases/common.rst:196
msgid ""
"``adapter.create(data, params) -> Promise`` creates a new record with "
"``data``. ``data`` can also be an array to create multiple records."
msgstr ""
"``adapter.create(data, params) -> Promise`` creates a new record with "
"``data``. ``data`` can also be an array to create multiple records."

#: ../../source/api/databases/common.rst:221
msgid "adapter.update(id, data, params)"
msgstr "adapter.update(id, data, params)"

#: ../../source/api/databases/common.rst:223
msgid ""
"``adapter.update(id, data, params) -> Promise`` completely replaces a "
"single record identified by ``id`` with ``data``. Does not allow "
"replacing multiple records (``id`` can’t be ``null``). ``id`` can not be "
"changed."
msgstr ""
"``adapter.update（id，data，params） - > "
"Promise``完全用``data``替换``id``标识的单个记录。不允许替换多个记录（``id``不能是``null``）。 "
"``id``无法更改。"

#: ../../source/api/databases/common.rst:241
msgid "adapter.patch(id, data, params)"
msgstr "adapter.patch(id, data, params)"

#: ../../source/api/databases/common.rst:243
msgid ""
"``adapter.patch(id, data, params) -> Promise`` merges a record identified"
" by ``id`` with ``data``. ``id`` can be ``null`` to allow replacing "
"multiple records (all records that match ``params.query`` the same as in "
"``.find``). ``id`` can not be changed."
msgstr ""
"``adapter.patch（id，data，params） - > Promise``将``id``标识的记录与``data``合并。 "
"``id``可以是``null``以允许替换多个记录（所有匹配``params.query``的记录与``.find``中相同）。 "
"``id``无法更改。"

#: ../../source/api/databases/common.rst:268
msgid "Mark all unread messages as read"
msgstr "Mark all unread messages as read"

#: ../../source/api/databases/common.rst:276
msgid "adapter.remove(id, params)"
msgstr "adapter.remove(id, params)"

#: ../../source/api/databases/common.rst:278
msgid ""
"``adapter.remove(id, params) -> Promise`` removes a record identified by "
"``id``. ``id`` can be ``null`` to allow removing multiple records (all "
"records that match ``params.query`` the same as in ``.find``)."
msgstr ""
"``adapter.remove(id, params) -> Promise`` removes a record identified by "
"``id``. ``id`` can be ``null`` to allow removing multiple records (all "
"records that match ``params.query`` the same as in ``.find``)."

#: ../../source/api/databases/common.rst:298
msgid "Remove all read messages"
msgstr "Remove all read messages"

#: ../../source/api/databases/common.rst:305
msgid "Extending Adapters"
msgstr "Extending Adapters"

#: ../../source/api/databases/common.rst:307
msgid ""
"There are two ways to extend existing database adapters. Either by "
"extending the ES6 base class or by adding functionality through hooks."
msgstr ""
"There are two ways to extend existing database adapters. Either by "
"extending the ES6 base class or by adding functionality through hooks."

#: ../../source/api/databases/common.rst:310
#, fuzzy
msgid ""
"Keep in mind that calling the original service methods will return a "
"Promise that resolves with the value."
msgstr ""
"**ProTip:** Keep in mind that calling the original service methods will "
"return a Promise that resolves with the value."

#: ../../source/api/databases/common.rst:314
msgid "Hooks"
msgstr "Hooks"

#: ../../source/api/databases/common.rst:316
#, fuzzy
msgid ""
"The most flexible option is weaving in functionality through "
":doc:`../hooks`. For example, ``createdAt`` and ``updatedAt`` timestamps "
"could be added like this:"
msgstr ""
"The most flexible option is weaving in functionality through "
":doc:`hooks`. For example, ``createdAt`` and ``updatedAt`` timestamps "
"could be added like this:"

#: ../../source/api/databases/common.rst:348
msgid "Classes (ES6)"
msgstr "Classes (ES6)"

#: ../../source/api/databases/common.rst:350
msgid ""
"All modules also export an `ES6 class "
"<https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes>`_"
" as ``Service`` that can be directly extended like this:"
msgstr ""
"All modules also export an `ES6 class "
"<https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes>`_"
" as ``Service`` that can be directly extended like this:"

#~ msgid ""
#~ "**Important:** Every database adapter is "
#~ "an implementation of the :doc:`services`. "
#~ "We recommend being familiar with "
#~ "services, service events and hooks "
#~ "before using a database adapter."
#~ msgstr ""

#~ msgid ""
#~ "**Note:** Disabling or changing the "
#~ "default pagination is not available in"
#~ " the client. Only ``params.query`` is "
#~ "passed to the server (also see a"
#~ " `workaround here "
#~ "<https://github.com/feathersjs/feathers/issues/382#issuecomment-238407741>`_)"
#~ msgstr ""

#~ msgid ""
#~ "``adapter.find(params) -> Promise`` returns a"
#~ " list of all records matching the "
#~ "query in ``params.query`` using the "
#~ "`common querying mechanism <./querying.md>`_. "
#~ "Will either return an array with "
#~ "the results or a page object if"
#~ " `pagination is enabled <#pagination>`_."
#~ msgstr ""

#~ msgid ""
#~ "``adapter.find(params) -> Promise`` returns a"
#~ " list of all records matching the "
#~ "query in :doc:``params.query`` using the "
#~ "`common querying mechanism <./querying>`_. "
#~ "Will either return an array with "
#~ "the results or a page object if"
#~ " `pagination is enabled <#pagination>`_."
#~ msgstr ""

#~ msgid ""
#~ "``adapter.find(params) -> Promise`` returns a"
#~ " list of all records matching the "
#~ "query in :doc:``params.query`` using the "
#~ "`common querying mechanism <./querying>`. Will"
#~ " either return an array with the "
#~ "results or a page object if "
#~ "`pagination is enabled <#pagination>`_."
#~ msgstr ""

#~ msgid ""
#~ "Every database adapter is an "
#~ "implementation of the :doc:`services`. We "
#~ "recommend being familiar with services, "
#~ "service events and hooks before using"
#~ " a database adapter."
#~ msgstr ""

