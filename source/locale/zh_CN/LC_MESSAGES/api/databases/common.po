# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-22 19:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/databases/common.rst:2
msgid "Common API"
msgstr "通用API"

#: ../../source/api/databases/common.rst:4
msgid ""
"All database adapters implement a common interface for initialization, "
"pagination, extending and querying. This chapter describes the common "
"adapter initialization and options, how to enable and use pagination, the"
" details on how specific service methods behave and how to extend an "
"adapter with custom functionality."
msgstr "所有数据库适配器都实现了用于初始化,分页,扩展和查询的通用接口.本章介绍常见的适配器初始化和选项,如何启用和使用分页,有关特定服务方法的行为以及如何使用自定义功能扩展适配器的详细信息."

#: ../../source/api/databases/common.rst:10
msgid ""
"Every database adapter is an implementation of the :doc:`../services`. We"
" recommend being familiar with services, service events and hooks before "
"using a database adapter."
msgstr "每个数据库适配器都是 :doc:`../services` 的实现.我们建议在使用数据库适配器之前熟悉服务,服务事件和挂钩."

#: ../../source/api/databases/common.rst:18
msgid "``service([options])``"
msgstr "``service([options])``"

#: ../../source/api/databases/common.rst:20
msgid "Returns a new service instance initialized with the given options."
msgstr "返回使用给定选项初始化的新服务实例."

#: ../../source/api/databases/common.rst:29
msgid "**Options:**"
msgstr "**选项:**"

#: ../../source/api/databases/common.rst:31
msgid ""
"``id`` (*optional*) - The name of the id field property (usually set by "
"default to ``id`` or ``_id``)."
msgstr ""
"``id`` (*可选*) - id字段属性的名称(通常默认设置为 ``id`` 或 ``_id``)."

#: ../../source/api/databases/common.rst:33
msgid ""
"``events`` (*optional*) - A list of `custom service events <../events"
"#custom-events>`_ sent by this service"
msgstr ""
"``events`` (*可选*) - 此服务发送的 `自定义服务事件 <../events #custom-events>`_ 列表"

#: ../../source/api/databases/common.rst:35
msgid ""
"``paginate`` (*optional*) - A `pagination object <#pagination>`_ "
"containing a ``default`` and ``max`` page size"
msgstr ""
"``paginate`` (*可选*) - 一个 `分页对象 <#pagination>`_ 包含一个 ``default`` 和 ``max`` 页面大小"

#: ../../source/api/databases/common.rst:37
msgid ""
"``whitelist`` (*optional*) - A list of additional non-standard query "
"parameters to allow (e.g ``[ '$regex', '$populate' ]``)"
msgstr ""
"``whitelist`` (*可选*) - 允许的其他非标准查询参数列表 (e.g ``[ '$regex', '$populate' ]``)"

#: ../../source/api/databases/common.rst:39
msgid ""
"``multi`` (*optional*, default: ``false``) - Allow ``create`` with arrays"
" and ``update`` and ``remove`` with id ``null`` to change multiple items."
" Can be ``true`` for all methods or an array of allowed methods (e.g. ``["
" 'remove', 'create' ]``)"
msgstr ""
"``multi`` (*可选*, 默认: ``false``) - 允许带有数组的 ``create`` 和带有 ``null`` 的 ``update`` 和 ``remove`` 来改变多个项目.对于所有方法或一组允许的方法都可以是 ``true`` (e.g. ``[ 'remove', 'create' ]``)"

#: ../../source/api/databases/common.rst:45
msgid "Pagination"
msgstr "分页"

#: ../../source/api/databases/common.rst:47
msgid ""
"When initializing an adapter you can set the following pagination options"
" in the ``paginate`` object:"
msgstr ""
"初始化适配器时,可以在 ``paginate`` 对象中设置以下分页选项:"

#: ../../source/api/databases/common.rst:50
msgid "``default`` - Sets the default number of items when ``$limit`` is not set"
msgstr "``default`` - 设置未设置 ``$limit`` 时的默认项目数"

#: ../../source/api/databases/common.rst:52
msgid ""
"``max`` - Sets the maximum allowed number of items per page (even if the "
"``$limit`` query parameter is set higher)"
msgstr ""
"``max`` - 设置每页允许的最大项数(即使 ``$limit`` 查询参数设置得更高)"

#: ../../source/api/databases/common.rst:55
msgid ""
"When ``paginate.default`` is set, ``find`` will return an *page object* "
"(instead of the normal array) in the following form:"
msgstr ""
"当设置 ``paginate.default`` 时, ``find`` 将返回以下形式的 *页面对象* (而不是正常数组):"

#: ../../source/api/databases/common.rst:67
msgid "The pagination options can be set as follows:"
msgstr "分页选项可以设置如下:"

#: ../../source/api/databases/common.rst:96
msgid ""
"Disabling or changing the default pagination is not available in the "
"client. Only ``params.query`` is passed to the server (also see a "
"`workaround here "
"<https://github.com/feathersjs/feathers/issues/382#issuecomment-238407741>`_)"
msgstr "客户端中不提供禁用或更改默认分页的功能.只有 ``params.query`` 被传递给服务器(另见 `这里 <https://github.com/feathersjs/feathers/issues/382#issuecomment-238407741>`_ 的解决方法)"

#: ../../source/api/databases/common.rst:100
msgid ""
"To just get the number of available records set ``$limit`` to ``0``. This"
" will only run a (fast) counting query against the database."
msgstr ""
"要获得可用记录的数量,将 ``$limit`` 设置为 ``0``.这只会对数据库运行(快速)计数查询."

#: ../../source/api/databases/common.rst:105
msgid "Service methods"
msgstr "服务方式"

#: ../../source/api/databases/common.rst:107
msgid ""
"This section describes specifics on how the :doc:`../services` are "
"implemented for all adapters."
msgstr ""
"本节介绍如何为所有适配器实现 :doc:`services` 的细节."

#: ../../source/api/databases/common.rst:110
msgid "adapter.Model"
msgstr ""

#: ../../source/api/databases/common.rst:112
msgid ""
"If the ORM or database supports models, the model instance or reference "
"to the collection belonging to this adapter can be found in "
"``adapter.Model``. This allows to easily make custom queries using that "
"model, e.g. in a hook:"
msgstr "如果ORM或数据库支持模型,则可以在 ``adapter.Model`` 中找到模型实例或属于此适配器的集合的引用.这允许使用该模型轻松地进行自定义查询,例如,在钩子里:"

#: ../../source/api/databases/common.rst:137
msgid "adapter.find(params)"
msgstr "adapter.find(params)"

#: ../../source/api/databases/common.rst:139
msgid ""
"``adapter.find(params) -> Promise`` returns a list of all records "
"matching the query in :doc:`./querying`. Will either return an array with"
" the results or a page object if `pagination is enabled <#pagination>`_."
msgstr "``adapter.find(params) - > Promise`` 返回与查询匹配的所有记录的列表 :doc:`./querying`. 如果启用了 `pagination <#pagination>`_,将返回带结果的数组或页面对象."

#: ../../source/api/databases/common.rst:143
msgid ""
"When used via REST URLs all query values are strings. Depending on the "
"database the values in ``params.query`` might have to be converted to the"
" right type in a :doc:`../hooks`."
msgstr "通过REST URL使用时,所有查询值都是字符串.根据数据库,``params.query`` 中的值可能必须在 :doc:`../hooks` 中转换为正确的类型."

#: ../../source/api/databases/common.rst:165
msgid "Find all messages for user with id 1"
msgstr "查找ID为1的用户的所有消息"

#: ../../source/api/databases/common.rst:171
msgid "Find all messages belonging to room 1 or 3"
msgstr "查找属于房间1或3的所有邮件"

#: ../../source/api/databases/common.rst:178
msgid "adapter.get(id, params)"
msgstr "adapter.get(id, params)"

#: ../../source/api/databases/common.rst:180
msgid ""
"``adapter.get(id, params) -> Promise`` retrieves a single record by its "
"unique identifier (the field set in the ``id`` option during "
"initialization)."
msgstr ""
"``adapter.get(id, params) -> Promise`` 通过其唯一标识符(初始化期间在 ``id`` 选项中设置的字段)检索单个记录."

#: ../../source/api/databases/common.rst:194
msgid "adapter.create(data, params)"
msgstr "adapter.create(data, params)"

#: ../../source/api/databases/common.rst:196
msgid ""
"``adapter.create(data, params) -> Promise`` creates a new record with "
"``data``. ``data`` can also be an array to create multiple records."
msgstr ""
"``adapter.create(data, params) -> Promise`` 使用 ``data`` 创建一个新记录. ``data`` 也可以是一个用来创建多个记录的数组."

#: ../../source/api/databases/common.rst:221
msgid "adapter.update(id, data, params)"
msgstr "adapter.update(id, data, params)"

#: ../../source/api/databases/common.rst:223
msgid ""
"``adapter.update(id, data, params) -> Promise`` completely replaces a "
"single record identified by ``id`` with ``data``. Does not allow "
"replacing multiple records (``id`` can’t be ``null``). ``id`` can not be "
"changed."
msgstr ""
"``adapter.update(id,data,params) - > Promise`` 完全用 ``data`` 替换 ``id`` 标识的单个记录.不允许替换多个记录(``id`` 不能是 ``null``). "
" ``id`` 无法更改."

#: ../../source/api/databases/common.rst:241
msgid "adapter.patch(id, data, params)"
msgstr "adapter.patch(id, data, params)"

#: ../../source/api/databases/common.rst:243
msgid ""
"``adapter.patch(id, data, params) -> Promise`` merges a record identified"
" by ``id`` with ``data``. ``id`` can be ``null`` to allow replacing "
"multiple records (all records that match ``params.query`` the same as in "
"``.find``). ``id`` can not be changed."
msgstr ""
"``adapter.patch(id,data,params) - > Promise`` 将 ``id`` 标识的记录与 ``data`` 合并. "
" ``id`` 可以是 ``null`` 以允许替换多个记录(所有匹配 ``params.query`` 的记录与 ``.find`` 中相同). "
" ``id`` 无法更改."

#: ../../source/api/databases/common.rst:268
msgid "Mark all unread messages as read"
msgstr "将所有未读邮件标记为已读"

#: ../../source/api/databases/common.rst:276
msgid "adapter.remove(id, params)"
msgstr "adapter.remove(id, params)"

#: ../../source/api/databases/common.rst:278
msgid ""
"``adapter.remove(id, params) -> Promise`` removes a record identified by "
"``id``. ``id`` can be ``null`` to allow removing multiple records (all "
"records that match ``params.query`` the same as in ``.find``)."
msgstr ""
"``adapter.remove(id, params) -> Promise`` 删除由 ``id`` 标识的记录. ``id`` 可以是 ``null`` 以允许删除多个记录(所有与``params.query``匹配的记录与 ``.find`` 相同)."

#: ../../source/api/databases/common.rst:298
msgid "Remove all read messages"
msgstr "删除所有阅读邮件"

#: ../../source/api/databases/common.rst:305
msgid "Extending Adapters"
msgstr "扩展适配器"

#: ../../source/api/databases/common.rst:307
msgid ""
"There are two ways to extend existing database adapters. Either by "
"extending the ES6 base class or by adding functionality through hooks."
msgstr ""
"有两种方法可以扩展现有的数据库适配器.通过扩展ES6基类或通过钩子添加功能."

#: ../../source/api/databases/common.rst:310
msgid ""
"Keep in mind that calling the original service methods will return a "
"Promise that resolves with the value."
msgstr ""
"请记住,调用原始服务方法将返回一个使用该值解析的Promise."

#: ../../source/api/databases/common.rst:314
msgid "Hooks"
msgstr "钩子"

#: ../../source/api/databases/common.rst:316
msgid ""
"The most flexible option is weaving in functionality through "
":doc:`../hooks`. For example, ``createdAt`` and ``updatedAt`` timestamps "
"could be added like this:"
msgstr "最灵活的选择是通过以下方式编织功能 :doc:`../hooks`.例如,可以像这样添加 ``createdAt`` 和 ``updatedAt`` 时间戳:"

#: ../../source/api/databases/common.rst:348
msgid "Classes (ES6)"
msgstr "Classes (ES6)"

#: ../../source/api/databases/common.rst:350
msgid ""
"All modules also export an `ES6 class "
"<https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes>`_"
" as ``Service`` that can be directly extended like this:"
msgstr ""
"所有模块还导出一个 `ES6类 <https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes>`_ 作为 ``Service``, 可以像这样直接扩展:"
