# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-22 19:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/authentication/local.rst:2
msgid "Local Authentication"
msgstr "本地验证"

#: ../../source/api/authentication/local.rst:4
msgid "|npm version| |Changelog|"
msgstr "|npm version| |Changelog|"

#: ../../source/api/authentication/local.rst:10
msgid ""
"[@feathersjs/authentication-local](https://github.com/feathersjs"
"/authentication-local) is a server side module that wraps the `passport-"
"local <https://github.com/jaredhanson/passport-local>`_ authentication "
"strategy, which lets you authenticate with your Feathers application "
"using a username and password."
msgstr ""
"[@ feathersjs / authentication-local]（https://github.com/feathersjs"
"/authentication-local）是一个服务器端模块，它包装了`passport-local "
"<https://github.com/jaredhanson/passport-local> "
"`_身份验证策略，它允许您使用用户名和密码对Feathers应用程序进行身份验证。"

#: ../../source/api/authentication/local.rst:16
msgid "This module contains 3 core pieces:"
msgstr "This module contains 3 core pieces:"

#: ../../source/api/authentication/local.rst:18
msgid "The main initialization function"
msgstr "The main initialization function"

#: ../../source/api/authentication/local.rst:19
msgid "The ``hashPassword`` hook"
msgstr "The ``hashPassword`` hook"

#: ../../source/api/authentication/local.rst:20
msgid "The ``Verifier`` class"
msgstr "The ``Verifier`` class"

#: ../../source/api/authentication/local.rst:23
msgid "Configuration"
msgstr "Configuration"

#: ../../source/api/authentication/local.rst:25
msgid "In most cases initializing the module is as simple as doing this:"
msgstr "In most cases initializing the module is as simple as doing this:"

#: ../../source/api/authentication/local.rst:48
msgid ""
"This will pull from your global authentication object in your config "
"file. It will also mix in the following defaults, which can be "
"customized."
msgstr ""
"This will pull from your global authentication object in your config "
"file. It will also mix in the following defaults, which can be "
"customized."

#: ../../source/api/authentication/local.rst:53
msgid "Options"
msgstr "Options"

#: ../../source/api/authentication/local.rst:72
#, fuzzy
msgid ""
"When setting the ``usernameField`` to ``username`` in the "
":doc:`../configuration` the value *must* be escaped as ``\\\\username`` "
"otherwise it will use the value of the ``username`` environment variable "
"on Windows systems."
msgstr ""
"在`doc：`configuration`中将``usernameField``设置为``username``时，值*必须*转义为``\\\\ "
"username``否则它将使用``username的值``Windows系统上的环境变量。"

#: ../../source/api/authentication/local.rst:78
msgid "hooks"
msgstr "hooks"

#: ../../source/api/authentication/local.rst:81
msgid "hashPassword"
msgstr "hashPassword"

#: ../../source/api/authentication/local.rst:83
msgid ""
"This hook is used to hash plain text passwords before they are saved to "
"the database. It uses the bcrypt algorithm by default but can be "
"customized by passing your own ``options.hash`` function."
msgstr ""
"This hook is used to hash plain text passwords before they are saved to "
"the database. It uses the bcrypt algorithm by default but can be "
"customized by passing your own ``options.hash`` function."

#: ../../source/api/authentication/local.rst:88
#, fuzzy
msgid ""
"**@feathersjs/authentication-local** does not allow to store clear text "
"passwords. This means the ``hashPassword`` hook **must** be used when "
"using the :ref:`local_verifier`."
msgstr ""
"**Important:** ``@feathersjs/authentication-local`` does not allow to "
"store clear text passwords. This means the ``hashPassword`` hook **must**"
" be used when using the `standard verifier <#verifier>`_."

#: ../../source/api/authentication/local.rst:91
msgid "Available options are"
msgstr "Available options are"

#: ../../source/api/authentication/local.rst:93
msgid ""
"``passwordField`` (default: ``'password'``) - key name of password field "
"to look on context.data"
msgstr ""
"``passwordField`` (default: ``'password'``) - key name of password field "
"to look on context.data"

#: ../../source/api/authentication/local.rst:95
msgid ""
"``hash`` (default: bcrypt hash function) - Takes in a password and "
"returns a hash."
msgstr ""
"``hash`` (default: bcrypt hash function) - Takes in a password and "
"returns a hash."

#: ../../source/api/authentication/local.rst:111
msgid "protect"
msgstr "protect"

#: ../../source/api/authentication/local.rst:113
msgid ""
"The protect hook makes sure that protected fields don’t get sent to a "
"client."
msgstr ""
"The protect hook makes sure that protected fields don’t get sent to a "
"client."

#: ../../source/api/authentication/local.rst:127
msgid "Verifier"
msgstr "Verifier"

#: ../../source/api/authentication/local.rst:129
msgid ""
"This is the verification class that does the actual username and password"
" verification by looking up the entity (normally a ``user``) on a given "
"service by the ``usernameField`` and compares the hashed password using "
"bcrypt. It has the following methods that can all be overridden. All "
"methods return a promise except ``verify``, which has the exact same "
"signature as `passport-local <https://github.com/jaredhanson/passport-"
"local>`_."
msgstr ""
"这是验证类，它通过``usernameField``在给定服务上查找实体（通常是``user``）并使用bcrypt比较散列密码来进行实际的用户名和密码验证。它具有以下可以覆盖的方法。除了``verify``之外，所有方法都返回一个promise，它与"
"`passport-local <https://github.com/jaredhanson/passport-"
"local>`_具有完全相同的签名。"

#: ../../source/api/authentication/local.rst:146
msgid ""
"The ``Verifier`` class can be extended so that you customize it’s "
"behavior without having to rewrite and test a totally custom local "
"Passport implementation. Although that is always an option if you don’t "
"want use this plugin."
msgstr "可以扩展``Verifier``类，以便您可以自定义它的行为，而无需重写和测试完全自定义的本地Passport实现。虽然如果您不想使用此插件，这始终是一个选项。"

#: ../../source/api/authentication/local.rst:151
msgid "An example of customizing the Verifier:"
msgstr "An example of customizing the Verifier:"

#: ../../source/api/authentication/local.rst:173
msgid "Client Usage"
msgstr "Client Usage"

#: ../../source/api/authentication/local.rst:176
msgid "authentication-client"
msgstr "authentication-client"

#: ../../source/api/authentication/local.rst:178
#, fuzzy
msgid ""
"When this module is registered server side, using the default config "
"values this is how you can authenticate using :doc:`./client`."
msgstr ""
"When this module is registered server side, using the default config "
"values this is how you can authenticate using :doc:`@feathersjs"
"/authentication-client <./client>`:"

#: ../../source/api/authentication/local.rst:193
msgid "HTTP Request"
msgstr "HTTP Request"

#: ../../source/api/authentication/local.rst:195
msgid ""
"If you are not using the ``@feathersjs/authentication-client`` and you "
"have registered this module server side, make a ``POST`` request to "
"``/authentication`` with the following payload:"
msgstr ""
"If you are not using the ``@feathersjs/authentication-client`` and you "
"have registered this module server side, make a ``POST`` request to "
"``/authentication`` with the following payload:"

#: ../../source/api/authentication/local.rst:208
msgid "Here is what that looks like with curl:"
msgstr "Here is what that looks like with curl:"

#: ../../source/api/authentication/local.rst:215
msgid "Sockets"
msgstr "Sockets"

#: ../../source/api/authentication/local.rst:217
msgid ""
"Authenticating using a local strategy via sockets is done by emitting the"
" following message:"
msgstr ""
"Authenticating using a local strategy via sockets is done by emitting the"
" following message:"

#~ msgid ""
#~ "**Important:** When setting the "
#~ "``usernameField`` to ``username`` in the "
#~ ":doc:`configuration` the value *must* be "
#~ "escaped as ``\\\\username`` otherwise it "
#~ "will use the value of the "
#~ "``username`` environment variable on Windows"
#~ " systems."
#~ msgstr ""

