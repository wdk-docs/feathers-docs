# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-25 18:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/faq/readme.rst:2
msgid "FAQ"
msgstr "常问问题"

#: ../../source/faq/readme.rst:4
msgid ""
"We’ve been collecting some commonly asked questions here. We’ll either be"
" updating the guide directly, providing answers here, or both."
msgstr "我们一直在收集一些常见问题.我们要么直接更新指南, 要么在这里提供答案, 要么两者兼而有之."

#: ../../source/faq/readme.rst:8
msgid "What Node versions does Feathers support"
msgstr "Feathers支持哪些Node版本"

#: ../../source/faq/readme.rst:10
msgid ""
"The latest version of Feathers and all plugins work with Node 6 and "
"later. Node 6 will be supported until **2019-04-18** when the official "
"support cycle ends."
msgstr ""
"最新版本的Feathers和所有插件适用于Node 6及更高版本.当官方支持周期结束时, 将支持 node 6, 直到 "
"**2019-04-18**."

#: ../../source/faq/readme.rst:14
msgid ""
"The `Feathers guides <https://docs.feathersjs.com/>`_ and applications "
"generated by the CLI (``@feathersjs/cli``) use newer language features "
"like ``async/await`` and require Node 8 or later."
msgstr ""
"CLI的 `Feathers指南 <https://docs.feathersjs.com/>`_ "
"和应用程序(``@feathersjs/cli``)使用更新的语言功能, 如 ``async/await``, 并要求 node 8或以后."

#: ../../source/faq/readme.rst:21
msgid "How do I create custom methods?"
msgstr "如何创建自定义方法?"

#: ../../source/faq/readme.rst:23
msgid ""
"One important thing to know about Feathers is that it only exposes the "
"official :doc:`../api/services` to clients. While you can add and use any"
" service method on the server, it is **not** possible to expose those "
"custom methods to clients."
msgstr ""
"关于Feathers的一个重要事项是, 它只向客户公开官方 :doc:`../api/services`. "
"虽然您可以在服务器上添加和使用任何服务方法, 但是不能将这些自定义方法公开给客户端. "

#: ../../source/faq/readme.rst:28
msgid ""
"Feathers is built around the `REST architectural constraints "
"<https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints>`_"
" and there are many good reasons for it. In general, almost anything that"
" may require custom methods or RPC style actions can also be done either "
"by creating a :doc:`../api/services` or through :doc:`../api/hooks`."
msgstr ""
"Feathers是围绕 `REST架构约束 "
"<https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints>`_"
" 构建的, 并且有很多很好的理由. 通常, 几乎任何可能需要自定义方法或RPC样式操作的东西也可以通过创建 "
":doc:`../api/services` 或通过 :doc:`../api/hooks` 来完成. "

#: ../../source/faq/readme.rst:35
msgid ""
"The benefits (like security, predictability, sending well defined real-"
"time events) so far heavily outweighed the slight change in thinking "
"required when conceptualizing your application logic."
msgstr "到目前为止, 这些好处(如安全性, 可预测性, 发送定义良好的实时事件)远远超过了概念化应用程序逻辑时所需思想的微小变化."

#: ../../source/faq/readme.rst:39
msgid "Examples:"
msgstr "例子:"

#: ../../source/faq/readme.rst:41
msgid "Send email action that does not store mail message in database."
msgstr "发送不在数据库中存储邮件消息的电子邮件操作."

#: ../../source/faq/readme.rst:43
msgid ""
"Resources (services) don’t have to be database records. It can be any "
"kind of resource (like the current weather for a city or creating an "
"email which will send it). Sending emails is usually done with either a "
"separate email :doc:`../api/services`:"
msgstr ""
"资源(服务)不必是数据库记录. 它可以是任何类型的资源(例如城市的当前天气或创建将发送它的电子邮件). 发送电子邮件通常使用单独的电子邮件 "
":doc:`../api/services`:"

#: ../../source/faq/readme.rst:56
msgid "Or in a :doc:`../api/hooks`."
msgstr "或者在 :doc:`../api/hooks` 中."

#: ../../source/faq/readme.rst:58
msgid ""
"Place an order in e-commerce web site. Behind the scenes, there are many "
"records will be inserted in one transaction: order_item, order_header, "
"voucher_tracking etc."
msgstr ""
"在电子商务网站下订单.在幕后, 将在一个事务中插入许多记录: order_item, order_header, "
"voucher_tracking等."

#: ../../source/faq/readme.rst:62
msgid ""
"This is what :doc:`../api/hooks` are for. When creating a new order you "
"also have a well defined hook chain:"
msgstr "这就是 :doc:`../api/hooks` 适用于.在创建新订单时, 您还有一个定义良好的钩链:"

#: ../../source/faq/readme.rst:84
msgid "A ``userService.resetPassword`` method"
msgstr "一个 ``userService.resetPassword`` 方法"

#: ../../source/faq/readme.rst:86
msgid ""
"This can also be implemented as a password service that resets the "
"password in the ``create`` method:"
msgstr "这也可以实现为在 ``create`` 方法中重置密码的密码服务:"

#: ../../source/faq/readme.rst:111
msgid "How do I do nested or custom routes?"
msgstr "如何进行嵌套或自定义路由?"

#: ../../source/faq/readme.rst:113
msgid ""
"Normally we find that they actually aren’t needed and that it is much "
"better to keep your routes as flat as possible. For example something "
"like ``users/:userId/posts`` is - although nice to read for humans - "
"actually not as easy to parse and process as the equivalent "
":doc:`../api/databases/querying`. Additionally, this will also work much "
"better when using Feathers through websocket connections which do not "
"have a concept of routes at all."
msgstr ""
"通常情况下,我们发现实际上并不需要它们,并且保持路线尽可能平坦要好得多.例如 ``users/:userId/posts`` 之类的东西 - "
"虽然很适合人类阅读 - 但实际上并不像等价的那样容易解析和处理 :doc:`../api/databases/querying`. "
"另外,当通过没有路线概念的websocket连接使用Feathers时,这也会更好."

#: ../../source/faq/readme.rst:121
msgid ""
"However, nested routes for services can still be created by registering "
"an existing service on the nested route and mapping the route parameter "
"to a query parameter like this:"
msgstr "但是, 仍然可以通过在嵌套路由上注册现有服务并将route参数映射到这样的查询参数来创建服务的嵌套路由.:"

#: ../../source/faq/readme.rst:152
msgid ""
"Now going to ``/users/123/posts`` will call ``postService.find({ query: {"
" userId: 123 } })`` and return all posts for that user."
msgstr ""
"现在转到 ``/users/123/posts`` 将调用 ``postService.find({query:{userId:123}})`` "
"并返回该用户的所有帖子."

#: ../../source/faq/readme.rst:156
msgid ""
"For more information about URL routing and parameters, refer to "
":doc:`../api/express`."
msgstr "有关URL路由和参数的更多信息, 请参阅 :doc:`../api/express`."

#: ../../source/faq/readme.rst:158
msgid ""
"URLs should never contain actions that change data (like ``post/publish``"
" or ``post/delete``). This has always been an important part of the HTTP "
"protocol and Feathers enforces this more strictly than most other "
"frameworks. For example to publish a post you would call ``.patch(id, { "
"published: true })``."
msgstr ""
"URL永远不应包含更改数据的操作(如 ``post/publish`` 或 "
"``post/delete``).这一直是HTTP协议的重要组成部分,而Feathers比大多数其他框架更严格地执行此操作.例如,要发布一个帖子,你会称之为"
" ``.patch(id,{published:true})``."

#: ../../source/faq/readme.rst:165
msgid "Can you support another database?"
msgstr "你能支持另一个数据库吗?"

#: ../../source/faq/readme.rst:167
#, python-format
msgid ""
"Feathers :doc:`../api/databases/adapters` implement 90% of the "
"functionality you may need to use Feathers with certain databases and "
"ORMs. However, even if your favourite database or ORM is not on the list "
"or the adapter does not support specific functionality you are looking "
"for, Feathers can still accomodate all your needs by "
":doc:`../api/services`."
msgstr ""
"Feathers :doc:`../api/databases/adapters` "
"实现了将Feathers用于某些数据库和ORM所需的90％的功能.但是,即使您喜欢的数据库或ORM不在列表中,或者适配器不支持您正在寻找的特定功能,Feathers仍然可以通过以下方式满足您的所有需求"
" :doc:`../api/services`."

#: ../../source/faq/readme.rst:174
msgid ""
"To use Feathers properly it is very important to understand how services "
"work and that all existing database adapters are just services that talk "
"to the database themselves."
msgstr "要正确使用Feathers, 了解服务如何工作以及所有现有数据库适配器只是与数据库本身通信的服务非常重要."

#: ../../source/faq/readme.rst:178
msgid ""
"The why and how to write your own services is covered "
":doc:`../guides/basics/readme`. In the generator a custom service can be "
"created by running ``feathers generate service``, choosing “A custom "
"service” and then editing the ``<servicename>/<servicename>.class.js`` "
"file to make the appropriate database calls."
msgstr ""
"编写自己的服务的原因和方法包括 :doc:`../guides/basics/readme`.在生成器中,可以通过运行 ``feathers "
"generate service``,选择“自定义服务”,然后编辑 ``<servicename>/<servicename> "
".class.js`` 文件来创建自定义服务,以生成相应的数据库调用."

#: ../../source/faq/readme.rst:184
msgid ""
"If you would like to publish your own database adapter, first make sure "
"there isn’t already a `community maintained adapter "
"<https://github.com/feathersjs/awesome-feathersjs#database>`_ for that "
"database (many maintainers are happy to get some help, too). If not, you "
"can run ``feathers generate plugin`` to create a new plugin. A reference "
"implementation for a database adapter can be found in the `feathers-"
"memory repository <https://github.com/feathersjs-ecosystem/feathers-"
"memory>`_. It is always possible for community maintained adapters to "
"graduate into an *official* Feathers adapter, at the moment there are "
"however no plans to add support for any new databases from the Feathers "
"team directly."
msgstr ""
"如果您想发布自己的数据库适配器, 首先要确保该数据库还没有一个 `社区维护适配器 <https://github.com/feathersjs"
"/awesome-feathersjs#database>`_ ( 许多维护者都是很高兴得到一些帮助).  如果没有, 你可以运行 "
"``feathers generate plugin`` 来创建一个新的插件. 可以在 `Feathers 记忆库 "
"<https://github.com/feathersjs-ecosystem/feathers-memory>`_ "
"中找到数据库适配器的参考实现. 社区维护的适配器总是有可能毕业于 *官方* Feathers适配器, "
"但目前还没有计划直接添加对Feathers团队的任何新数据库的支持. "

#: ../../source/faq/readme.rst:195
msgid "I am not getting real-time events"
msgstr "我没有得到实时事件"

#: ../../source/faq/readme.rst:197
msgid ""
"Feathers Buzzard (``@feathersjs/feathers@v3.0.0``) introduced a new, more"
" secure event system that does **not** send real-time events by default. "
"If you are not getting real-time events on the client, it is usually a "
"problem with the :doc:`../api/channels` setup."
msgstr ""
"Feathers Buzzard (``@feathersjs/feathers@v3.0.0``)引入了一个新的,更安全的事件系统,默认情况下 "
"**不会** 发送实时事件.如果您没有在客户端上获得实时事件,则通常是 :doc:`../api/channels` 设置存在问题."

#: ../../source/faq/readme.rst:202
msgid ""
"Have a look a the example at `feathersjs.com <https://feathersjs.com/>`_,"
" the :doc:`../guides/basics/real-time` and the :doc:`../api/channels`. If"
" you are migrating from a previous version, also see the "
":doc:`../migrating#adding-channels`."
msgstr ""
"看一下 `feathersjs.com <https://feathersjs.com/>`_ 的例子 "
":doc:`../guides/basics/real-time` 和 "
":doc:`../api/channels`.如果要从以前的版本迁移,请参阅 :ref:`migrationing_adding-"
"channels`."

#: ../../source/faq/readme.rst:208
msgid ""
"The generated application already sets up a ``channels.js`` file that "
"sends events to only authenticated users by default but can be modified "
"to your needs according the the :doc:`../api/channels`."
msgstr ""
"生成的应用程序已经设置了一个 ``channels.js`` 文件, 默认情况下只向经过身份验证的用户发送事件, 但可以根据 "
":doc:`../api/channels` 修改为您的需求. "

#: ../../source/faq/readme.rst:213
msgid "How do I do search?"
msgstr "我该如何搜索?"

#: ../../source/faq/readme.rst:215
msgid ""
"This depends on the database adapter you are using. See "
":doc:`../api/databases/querying#search` for more information."
msgstr "这取决于您使用的数据库适配器. 有关更多信息, 请参阅 :doc:`../api/databases/querying#search`. "

#: ../../source/faq/readme.rst:220
msgid "Why am I not getting JSON errors?"
msgstr "为什么我没有收到JSON错误?"

#: ../../source/faq/readme.rst:222
msgid ""
"If you get a plain text error and a 500 status code for errors that "
"should return different status codes, make sure you have the "
"``express.errorHandler()`` from the ``@feathersjs/express`` module "
"configured as described in the :doc:`../api/express#expresserrorhandler` "
"chapter."
msgstr ""
"如果你得到一个纯文本错误和一个500状态代码来处理应该返回不同状态代码的错误,请确保你有 ``@feathersjs/express`` "
"模块配置的 ``express.errorHandler()`` "
":doc:`../api/express#expresserrorhandler` 章节."

#: ../../source/faq/readme.rst:228
msgid "Why am I not getting the correct HTTP error code"
msgstr "为什么我没有收到正确的HTTP错误代码"

#: ../../source/faq/readme.rst:230
msgid "See the above answer."
msgstr "见上面的答案."

#: ../../source/faq/readme.rst:233
msgid "How can I do custom methods like ``findOrCreate``?"
msgstr "我怎样才能做 ``findOrCreate`` 这样的自定义方法?"

#: ../../source/faq/readme.rst:235
msgid ""
"Custom functionality can almost always be mapped to an existing service "
"method using hooks. For example, ``findOrCreate`` can be implemented as a"
" before-hook on the service’s ``get`` method. `See this gist "
"<https://gist.github.com/marshallswain/9fa3b1e855633af00998>`_ for an "
"example of how to implement this in a before-hook."
msgstr ""
"自定义功能几乎总是可以使用挂钩映射到现有服务方法. 例如, ``findOrCreate`` 可以作为服务的 ``get`` 方法的前挂钩实现. "
"`请参阅此要点 <https://gist.github.com/marshallswain/9fa3b1e855633af00998>`_ "
"以获取如何在前挂钩中实现此功能的示例. "

#: ../../source/faq/readme.rst:241
msgid "Why are you using JWT for sessions"
msgstr "为什么使用JWT进行会话"

#: ../../source/faq/readme.rst:243
msgid ""
"Feathers is using `JSON web tokens (JWT) <https://jwt.io/>`_ for its "
"standard authentication mechanism. Some articles like `Stop using JWT for"
" sessions <http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-"
"sessions/>`_ promotes using standard cookies and HTTP sessions. While it "
"brings up some valid points, not all of them apply to Feathers and there "
"are other good reasons why Feathers relies on JWT:"
msgstr ""
"Feathers使用 `JSON web tokens(JWT) <https://jwt.io/>`_ 作为其标准身份验证机制.一些文章,如 "
"`停止使用JWT进行会话 <http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-"
"for-sessions/>`_ "
"促进使用标准cookie和HTTP会话.虽然它提出了一些有效点,但并非所有这些都适用于Feathers,并且Feathers依赖于JWT还有其他很好的理由:"

#: ../../source/faq/readme.rst:251
msgid ""
"Feathers is designed to support many different transport mechanisms, most"
" of which do not rely on HTTP but do work well with JWT as the "
"authentication mechanism. This is even already the case for websockets "
"where an established connection normally is not secured by a traditional "
"HTTP session."
msgstr "Feathers旨在支持许多不同的传输机制,其中大多数不依赖于HTTP,但是作为身份验证机制可以很好地与JWT配合使用.对于通常不受传统HTTP会话保护的已建立连接的websockets,情况就已如此."

#: ../../source/faq/readme.rst:256
msgid ""
"By default the only thing that Feathers stored in the JWT payload is the "
"user id. It is a stateful token. You can change this and make the token "
"stateless by putting more data into the JWT payload but this is at your "
"discretion. Currently the user is looked up on every request after the "
"JWT is verified to not be expired or tampered with."
msgstr "默认情况下,Feathers存储在JWT有效内容中的唯一内容是用户ID.这是一个有状态的标记.您可以通过将更多数据放入JWT有效负载来更改此设置并使令牌无状态,但这由您自行决定.目前,在JWT被验证为未过期或被篡改之后,每个请求都会查找用户."

#: ../../source/faq/readme.rst:261
msgid ""
"You need to make sure that you revoke JWT tokens or set a low expiration "
"date or add custom logic to verify that a user’s account is still "
"valid/active. Currently the default expiration is 1 day. We chose a "
"reasonable default for most apps but depending on your application this "
"might be too long or too short."
msgstr "您需要确保撤消JWT令牌或设置较低的过期日期或添加自定义逻辑以验证用户的帐户是否仍然有效/有效.目前默认的到期时间是1天.我们为大多数应用选择了合理的默认设置,但根据您的应用,这可能太长或太短."

#: ../../source/faq/readme.rst:267
msgid ""
"Additionally, it is still possible to use Feathers with existing "
"*traditional* Express session mechanism by using :doc:`../api/express`. "
"For example, ``params.user`` for all service calls from a traditional "
"Express session can be passed like this:"
msgstr ""
"此外,通过使用:doc:`../api/express`,仍然可以将Feathers与现有的* traditional * "
"Express会话机制一起使用.例如,来自传统Express会话的所有服务调用的 ``params.user`` 可以像这样传递:"

#: ../../source/faq/readme.rst:280
msgid "How do I render templates?"
msgstr "如何渲染模板?"

#: ../../source/faq/readme.rst:282
msgid ""
"Feathers works just like Express so it’s the exact same. We’ve created a "
":doc:`../guides/advanced/using-a-view-engine`. For protecting Express "
"views with authentication, also see :doc:`../guides/auth/recipe.express-"
"middleware`."
msgstr ""
"Feathers就像Express一样工作,所以它完全相同.我们创建了一个 :doc:`../guides/advanced/using-a"
"-view-engine`.有关使用身份验证保护Express视图的信息,请参阅 :doc:`../guides/auth/recipe"
".express-middleware`."

#: ../../source/faq/readme.rst:287
msgid "OAuth is not setting the cookie"
msgstr "OAuth未设置Cookie"

#: ../../source/faq/readme.rst:289
msgid ""
"If you are authenticating via oAuth but your API and frontend reside on "
"different domains the cookie used by the authentication client can not be"
" set. Instead, a query string redirect has to be used as shown in `this "
"gist "
"<https://gist.github.com/marshallswain/3c9e5b3b177b977468b5b711b6254f67>`_."
msgstr ""
"如果您通过oAuth进行身份验证,但您的API和前端驻留在不同的域上,则无法设置身份验证客户端使用的cookie.相反,必须使用查询字符串重定向,如"
" `this gist "
"<https://gist.github.com/marshallswain/3c9e5b3b177b977468b5b711b6254f67>`_"
" 所示."

#: ../../source/faq/readme.rst:295
msgid "How do I create channels or rooms"
msgstr "如何创建频道或房间"

#: ../../source/faq/readme.rst:297
msgid ""
"In Feathers :doc:`../api/channels` are the way to send "
":doc:`../api/events` to only certain clients."
msgstr "在Feathers :doc:`../api/channels` 是向某些客户发送 :doc:`../api/events` 的方式. "

#: ../../source/faq/readme.rst:301
msgid "How do I do validation?"
msgstr "我该如何进行验证?"

#: ../../source/faq/readme.rst:303
msgid ""
"If your database/ORM supports a model or schema (ie. Mongoose or "
"Sequelize) then you have 2 options."
msgstr "如果您的数据库/ORM支持模型或模式(即Mongoose或Sequelize), 那么您有2个选项."

#: ../../source/faq/readme.rst:307 ../../source/faq/readme.rst:343
msgid "The preferred way"
msgstr "首选方式"

#: ../../source/faq/readme.rst:309
msgid ""
"You perform validation at the service level :doc:`../api/hooks`. This is "
"better because it keeps your app database agnostic so you can easily swap"
" databases without having to change your validations much."
msgstr ""

#: ../../source/faq/readme.rst:313
msgid ""
"If you write a bunch of small hooks that validate specific things it is "
"easier to test and also slightly more performant because you can exit out"
" of the validation chain early instead of having to go all the way to the"
" point of inserting data into the database to find out if that data is "
"invalid."
msgstr ""
"如果你编写了一堆小钩子来验证特定的东西, 那么它更容易测试, 而且性能稍微高一些, 因为你可以提前退出验证链, "
"而不必一直到将数据插入到数据库中找出该数据是否无效."

#: ../../source/faq/readme.rst:319
msgid ""
"If you don’t have a model or schema then validating with hooks is "
"currently your only option. If you come up with something different feel "
"free to submit a PR!"
msgstr "如果您没有模型或模式, 那么使用钩子进行验证是您唯一的选择.如果您想出一些不同的东西, 请随时提交PR！"

#: ../../source/faq/readme.rst:324 ../../source/faq/readme.rst:361
msgid "The ORM way"
msgstr "ORM方式"

#: ../../source/faq/readme.rst:326
msgid "With ORM adapters you can perform validation at the model level:"
msgstr "使用ORM适配器, 您可以在模型级别执行验证:"

#: ../../source/faq/readme.rst:328
msgid ""
"`Using Mongoose <https://github.com/feathersjs-ecosystem/feathers-"
"mongoose#validation>`_"
msgstr ""
"`使用Mongoose <https://github.com/feathersjs-ecosystem/feathers-"
"mongoose#validation>`_"

#: ../../source/faq/readme.rst:329
msgid ""
"`Using Sequelize <http://docs.sequelizejs.com/en/latest/docs/models-"
"definition/#validations>`_"
msgstr ""
"`使用Sequelize <http://docs.sequelizejs.com/en/latest/docs/models-"
"definition/#validations>`_"

#: ../../source/faq/readme.rst:331
msgid ""
"The nice thing about the model level validations is Feathers will return "
"the validation errors to the client in a nice consistent format for you."
msgstr "关于模型级验证的好处是Feathers会以一种很好的一致格式将验证错误返回给客户端."

#: ../../source/faq/readme.rst:335
msgid "How do I do associations?"
msgstr "如何做协会?"

#: ../../source/faq/readme.rst:337
msgid ""
"Similar to validation, it depends on if your database/ORM supports models"
" or not."
msgstr "与验证类似, 它取决于您的数据库/ORM是否支持模型."

#: ../../source/faq/readme.rst:345
msgid ""
"For any of the feathers database/ORM adapters you can just use "
":doc:`../api/hooks` to fetch data from other services."
msgstr "对于任何Feathers数据库/ORM适配器, 您只需使用 :doc:`../api/hooks` 从其他服务获取数据."

#: ../../source/faq/readme.rst:348
msgid ""
"This is a better approach because it keeps your application database "
"agnostic and service oriented. By referencing the services (using "
"``app.service().find()``, etc.) you can still decouple your app and have "
"these services live on entirely separate machines or use entirely "
"different databases without having to change any of your fetching code. "
"We show how to associate data in a hook in the "
":doc:`../guides/chat/processing`. An alternative are the `fastJoin <https"
"://feathers-plus.github.io/v1/feathers-hooks-common/#fastjoin>`_ or "
"`populate <https://feathers-plus.github.io/v1/feathers-hooks-"
"common/#populate>`_ in `feathers-hooks-common <https://feathers-"
"plus.github.io/v1/feathers-hooks-common/>`_."
msgstr ""

#: ../../source/faq/readme.rst:363
msgid ""
"With mongoose you can use the ``$populate`` query param to populate "
"nested documents."
msgstr "使用mongoose, 您可以使用 ``$populate`` 查询参数来填充嵌套文档."

#: ../../source/faq/readme.rst:376
msgid "With Sequelize you can do this:"
msgstr "使用Sequelize, 你可以做到这一点:"

#: ../../source/faq/readme.rst:391
msgid ""
"Or set it in a hook as `described here <https://github.com/feathersjs-"
"ecosystem/feathers-sequelize#associations-and-relations>`_."
msgstr ""
"或者 `如此处所述 <https://github.com/feathersjs-ecosystem/feathers-sequelize"
"#associations-and-relations>`_ 将其设置在钩子中."

#: ../../source/faq/readme.rst:394
msgid "Sequelize models and associations"
msgstr "Sequelize模型和协会"

#: ../../source/faq/readme.rst:396
msgid ""
"If you are using the `Sequelize <http://docs.sequelizejs.com/>`_ adapter,"
" understanding SQL and Sequelize first is very important. See the "
"`associations section in the feathers-sequelize documentation "
"<https://github.com/feathersjs-ecosystem/feathers-"
"sequelize#associations>`_ for more information on how to associate models"
" using the Sequelize Feathers adapter."
msgstr ""
"如果您正在使用 `Sequelize <http://docs.sequelizejs.com/>`_ adapter, "
"首先了解SQL和Sequelize非常重要.有关如何使用Sequelize Feathers适配器关联模型的更多信息, 请参阅feathers-"
"sequelize文档中的 `associations部分 <https://github.com/feathersjs-ecosystem"
"/feathers-sequelize#associations>`_."

#: ../../source/faq/readme.rst:403
msgid "What about Koa/Hapi/X?"
msgstr "Koa/Hapi/X 怎么样?"

#: ../../source/faq/readme.rst:405
msgid ""
"There are many other Node server frameworks out there like Koa, a *“next "
"generation web framework for Node.JS”* using ES6 generator functions "
"instead of Express middleware or HapiJS etc. Currently, Feathers is "
"framework independent but only provides an :doc:`../api/express` "
"integration for HTTP APIs. More frameworks may be supported in the future"
" with direct `Node HTTP <https://nodejs.org/api/http.html>`_ being the "
"most likely."
msgstr ""
"还有许多其他节点服务器框架, 如Koa, 一个*“Node.JS的下一代Web框架”*使用ES6生成器函数而不是Express中间件或HapiJS等."
" 目前, Feathers与框架无关, 但仅为HTTP API提供 :doc:`../api/express` 集成. 未来可能会支持更多的框架, 直接"
" `Node HTTP <https://nodejs.org/api/http.html>`_ 是最有可能的."

#: ../../source/faq/readme.rst:413
msgid "How do I access the request object in hooks or services?"
msgstr "如何在挂钩或服务中访问请求对象?"

#: ../../source/faq/readme.rst:415
msgid ""
"In short, you shouldn’t need to. If you look at the :doc:`../api/hooks` "
"you’ll see all the params that are available on a hook."
msgstr "简而言之, 你不应该这样做.如果你看一下 :doc:`../api/hooks` , 你会看到钩子上可用的所有参数."

#: ../../source/faq/readme.rst:418
msgid ""
"If you still need something from the request object (for example, the "
"requesting IP address) you can simply tack it on to the ``req.feathers`` "
"object :doc:`../api/express#params` or "
":doc:`../api/socketio#appconfiguresocketiocallback`."
msgstr ""
"如果您仍然需要请求对象中的某些内容(例如, 请求的IP地址), 您只需将其添加到 ``req.feathers`` 对象 "
":doc:`../api/express#params` 或 :doc "
":`../API/socketio＃appconfiguresocketiocallback`."

#: ../../source/faq/readme.rst:424
msgid "How do I mount sub apps?"
msgstr "如何挂载子应用程序?"

#: ../../source/faq/readme.rst:426
msgid ""
"It’s pretty much exactly the same as Express. More information can be "
"found :doc:`../api/express#sub-apps`."
msgstr "它与Express几乎完全相同.可以找到更多信息 :doc:`../api/express #sub-apps`."

#: ../../source/faq/readme.rst:430
msgid "How do I do some processing after sending the response to the user?"
msgstr "将响应发送给用户后如何进行处理?"

#: ../../source/faq/readme.rst:432
msgid ""
"The hooks workflow allows you to handle these situations quite "
"gracefully. It depends on the promise that you return in your hook. "
"Here’s an example of a hook that sends an email, but doesn’t wait for a "
"success message."
msgstr "钩子工作流程允许您非常优雅地处理这些情况.这取决于你在钩子里回来的承诺.这是一个发送电子邮件但不等待成功消息的钩子的示例."

#: ../../source/faq/readme.rst:456
msgid "How do I debug my app"
msgstr "如何调试我的应用程序"

#: ../../source/faq/readme.rst:458
msgid ""
"It’s really no different than debugging any other NodeJS app but you can "
"refer to `this blog post <https://blog.feathersjs.com/debugging-feathers-"
"with-visual-studio-code-406e6adf2882>`_ for more Feathers specific tips "
"and tricks."
msgstr ""
"它与调试任何其他NodeJS应用程序没有什么不同, 但您可以参考 `此博客文章 <https://blog.feathersjs.com"
"/debugging-feathers-with-visual-studio-code-406e6adf2882>`_ "
"获取更多特定的Feathers技巧和窍门."

#: ../../source/faq/readme.rst:463
msgid "``possible EventEmitter memory leak detected`` warning"
msgstr "``可能检测到EventEmitter内存泄漏`` 警告"

#: ../../source/faq/readme.rst:465
msgid ""
"This warning is not as bad as it sounds. If you got it from Feathers you "
"most likely registered more than 64 services and/or event listeners on a "
"Socket. If you don’t think there are that many services or event "
"listeners you may have a memory leak. Otherwise you can increase the "
"number in the :doc:`../api/socketio` via "
"``io.sockets.setMaxListeners(number)`` and with :doc:`../api/primus` via "
"``primus.setMaxListeners(number)``. ``number`` can be ``0`` for unlimited"
" listeners or any other number of how many listeners you’d expect in the "
"worst case."
msgstr ""

#: ../../source/faq/readme.rst:476
msgid "Why can’t I pass ``params`` from the client?"
msgstr "为什么我不能从客户端传递 ``params``?"

#: ../../source/faq/readme.rst:478
msgid "When you make a call like:"
msgstr "当你拨打电话时:"

#: ../../source/faq/readme.rst:487
msgid ""
"on the client the ``context.params`` object will only be available in "
"your client side hooks. It will not be provided to the server. The reason"
" for this is because ``context.params`` on the server usually contains "
"information that should be server-side only. This can be database "
"options, whether a request is authenticated, etc. If we passed those "
"directly from the client to the server this would be a big security risk."
" Only the client side ``context.params.query`` and "
"``context.params.headers`` objects are provided to the server."
msgstr ""

#: ../../source/faq/readme.rst:496
msgid ""
"If you need to pass info from the client to the server that is not part "
"of the query you need to add it to ``context.params.query`` on the client"
" side and explicitly pull it out of ``context.params.query`` on the "
"server side. This can be achieved like so:"
msgstr ""
"如果您需要将信息从客户端传递到不属于查询的服务器, 则需要将其添加到客户端的 ``context.params.query`` "
"并明确地将其从``context.params中拉出来.在服务器端查询``.这可以这样实现:"

#: ../../source/faq/readme.rst:534
msgid "My queries with null values aren’t working"
msgstr "我的带有空值的查询无效"

#: ../../source/faq/readme.rst:536
#, fuzzy
msgid ""
"When making a request using REST (HTTP) query *string* values don’t have "
"any type information and will always be strings. Some database adapters "
"that have a schema (like ``feathers-mongoose`` or ``feathers-sequelize``)"
" will try to convert values to the correct type but others (like "
"``feathers-mongodb``) can’t. Additionally, ``null`` will always be a "
"string and always has to be converted if you want to query for ``null``. "
"This can be done in a ``before`` :doc:`../api/hooks`:"
msgstr ""
"使用REST(HTTP)查询 *string* 值发出请求时, 没有任何类型信息, 并且始终是字符串.一些具有模式的数据库适配器(如 "
"``feathers-mongoose`` 或 ``feathers-sequelize``)将尝试将值转换为正确的类型, 但其他数据库适配器(如"
"``feathers-mongodb``)则不能.另外, ``null`` 将永远是一个字符串, 如果你想查询``null``, "
"总是必须转换.这可以在``before``中完成:doc:`api/hooks`:"

#: ../../source/faq/readme.rst:563
msgid ""
"Also see `this issue "
"<https://github.com/feathersjs/feathers/issues/894>`_."
msgstr "另见 `this issue <https://github.com/feathersjs/feathers/issues/894>`_."

#: ../../source/faq/readme.rst:566
msgid ""
"This issue does not happen when using websockets since it retains all "
"type information."
msgstr "使用websockets时不会发生此问题, 因为它保留所有类型信息."

#: ../../source/faq/readme.rst:570
msgid "Why are queries with arrays failing?"
msgstr "为什么带有数组的查询失败?"

#: ../../source/faq/readme.rst:572
msgid ""
"If you are using REST and queries with larger arrays (more than 21 items "
"to be exact) are failing you are probably running into an issue with the "
"`querystring <https://github.com/ljharb/qs>`_ module which `limits the "
"size of arrays to 21 items <https://github.com/ljharb/qs#parsing-"
"arrays>`_ by default. The recommended solution is to implement a custom "
"query string parser function via ``app.set('query parser', "
"parserFunction)`` with the ``arrayLimit`` option set to a higher value:"
msgstr ""
"如果你正在使用REST和大型数组的查询(确切地说超过21个项目)失败, 那么你可能会遇到 `querystring "
"<https://github.com/ljharb/qs>`_ module的问题.默认情况下, `将数组的大小限制为21项 "
"<https://github.com/ljharb/qs#parsing-arrays>`_ 推荐的解决方案是通过 "
"``app.set('query parser', parserFunction)`` 实现自定义查询字符串解析器函数, 并将 "
"``arrayLimit`` 选项设置为更高的值:"

#: ../../source/faq/readme.rst:589
#, fuzzy
msgid ""
"For more information see the `Express application settings "
"<http://expressjs.com/en/4x/api.html#app.set>`_ `@feathersjs/rest#88 "
"<https://github.com/feathersjs/feathers-rest/issues/88>`_ and `feathers-"
"mongoose#205 <https://github.com/feathersjs-ecosystem/feathers-"
"mongoose/issues/205>`_."
msgstr ""
"有关更多信息, 请参阅 `Express应用程序设置 "
"<http://expressjs.com/en/4x/api.html#app.set>`_ "
"[@feathersjs/rest＃88](https://github.com/feathersjs/feathers-"
"rest/issues/88) 和 `feathers-mongoose＃205 <https://github.com/feathersjs-"
"ecosystem/feathers-mongoose/issues/205>`_."

#: ../../source/faq/readme.rst:595
msgid "I always get a 404 for my custom middleware"
msgstr "我的自定义中间件总是得到404"

#: ../../source/faq/readme.rst:597
msgid ""
"Just like in Express itself, the order of middleware matters. If you "
"registered a custom middleware outside of the generator, you have to make"
" sure that it runs before the ``notFound()`` error midlleware."
msgstr ""
"Just like in Express itself, the order of middleware matters. If you "
"registered a custom middleware outside of the generator, you have to make"
" sure that it runs before the ``notFound()`` error midlleware."

#: ../../source/faq/readme.rst:602
msgid "How do I get OAuth working across different domains"
msgstr "如何让OAuth跨不同的域工作"

#: ../../source/faq/readme.rst:604
msgid ""
"The standard Feathers oAuth setup sets the JWT in a cookie which can only"
" be passed between the same domain. If your frontend is running on a "
"different domain you will have to use query string redirects as outlined "
"in `this Gist "
"<https://gist.github.com/marshallswain/3c9e5b3b177b977468b5b711b6254f67>`_."
msgstr ""
"标准的Feathers oAuth设置将JWT设置在cookie中, 该cookie只能在同一个域之间传递.如果您的前端在不同的域上运行, "
"则必须使用查询字符串重定向, 如 `此要点 "
"<https://gist.github.com/marshallswain/3c9e5b3b177b977468b5b711b6254f67>`_"
" 中所述."

#: ../../source/faq/readme.rst:610
msgid "My configuration isn’t loaded"
msgstr "我的配置未加载"

#: ../../source/faq/readme.rst:612
#, fuzzy
msgid ""
"If you are running or requiring the Feathers app from a different folder "
":doc:`../api/configuration` needs to be instructed where the "
"configuration files for the app are located. Since it uses `node-config "
"<https://github.com/lorenwest/node-config>`_ this can be done by setting "
"the `NODE_CONFIG_DIR envorinment variable <https://github.com/lorenwest"
"/node-config/wiki/Environment-Variables#node_config_dir>`_."
msgstr ""
"如果您正在运行或要求其他文件夹中的Feathers应用程序 :doc:`api/configuration` "
"需要指示应用程序的配置文件所在的位置.由于它使用`node-config <https://github.com/lorenwest/node-"
"config>`_这可以通过设置`NODE_CONFIG_DIR "
"envorinment变量<https://github.com/lorenwest/node-"
"config/来完成.维基/环境变量＃node_config_dir>`_."

#: ../../source/faq/readme.rst:619
msgid "How do I set up HTTPS?"
msgstr "如何设置HTTPS?"

#: ../../source/faq/readme.rst:621
msgid "Check out the Feathers :doc:`../api/express#https`."
msgstr "查看Feathers :doc:`../api/express#https`."

#: ../../source/faq/readme.rst:624
msgid "Is Feathers production ready?"
msgstr "Feathers 生产准备好了吗?"

#: ../../source/faq/readme.rst:626
msgid ""
"Yes! It’s being used in production by a bunch of companies from startups "
"to fortune 500s. For some more details see `this answer on Quora "
"<https://www.quora.com/Is-FeathersJS-production-ready>`_."
msgstr ""
"Yes! It’s being used in production by a bunch of companies from startups "
"to fortune 500s. For some more details see `this answer on Quora "
"<https://www.quora.com/Is-FeathersJS-production-ready>`_."

#~ msgid ""
#~ "This warning is not as bad as "
#~ "it sounds. If you got it from "
#~ "Feathers you most likely registered more"
#~ " than 64 services and/or event "
#~ "listeners on a Socket. If you "
#~ "don’t think there are that many "
#~ "services or event listeners you may "
#~ "have a memory leak. Otherwise you "
#~ "can increase the number in the "
#~ ":doc:`api/socketio` via "
#~ "``io.sockets.setMaxListeners(number)`` and with "
#~ ":doc:`api/primus` via ``primus.setMaxListeners(number)``."
#~ " ``number`` can be ``0`` for "
#~ "unlimited listeners or any other number"
#~ " of how many listeners you’d expect"
#~ " in the worst case."
#~ msgstr ""

