# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the feathers docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: feathers docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-21 21:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/guides/basics/real-time.rst:2
msgid "Real-time APIs"
msgstr "实时API"

#: ../../source/guides/basics/real-time.rst:4
msgid ""
"In the :doc:`./services` chapter we saw that Feathers services "
"automatically send ``created``, ``updated``, ``patched`` and ``removed`` "
"events when a ``create``, ``update``, ``patch`` or ``remove`` service "
"method returns. Real-time means that those events are also published to "
"connected clients so that they can react accordingly, e.g. update their "
"UI."
msgstr "在 :doc:`./services` 一章中, 我们看到Feathers服务在 ``create`` 时自动发送 ``created``, ``updated``, ``patchched`` 和 ``removed`` 事件, ``update``, ``patch`` 或 ``remove`` 服务方法返回. 实时意味着这些事件也会发布到连接的客户端, 以便他们可以做出相应的反应, 例如, 更新他们的UI. "

#: ../../source/guides/basics/real-time.rst:11
msgid ""
"To allow real-time communication with clients we need a transport that "
"supports bi-directional communication. In Feathers those are the "
":doc:`../../api/socketio` and :doc:`../../api/primus` transport both of "
"which use `websockets <https://developer.mozilla.org/en-"
"US/docs/Web/API/WebSockets_API>`_ to receive real-time events *and also* "
"call service methods."
msgstr "为了实现与客户的实时通信, 我们需要一种支持双向通信的传输. 在Feathers中, 这些是 :doc:`../../api/socketio` 和 :doc:`../../api/primus` transport 都使用 `websockets <https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API>`_ 用于接收实时事件*以及*调用服务方法. "

#: ../../source/guides/basics/real-time.rst:18
msgid ""
"The :doc:`./rest` does not support real-time updates. Since socket "
"transports also allow to call service methods and generally perform "
"better, we recommend using a real-time transport whenever possible."
msgstr ":doc:`./rest` 不支持实时更新. 由于套接字传输也允许调用服务方法并且通常性能更好, 因此我们建议尽可能使用实时传输. "

#: ../../source/guides/basics/real-time.rst:23
msgid ""
"In this chapter we will use Socket.io and create a :doc:`./databases` "
"real-time API that also still supports a :doc:`./rest`."
msgstr "在本章中, 我们将使用Socket.io并创建一个 :doc:`./databases` 实时API, 它仍然支持 :doc:`./rest`. "

#: ../../source/guides/basics/real-time.rst:27
msgid "Using the transport"
msgstr "使用运输"

#: ../../source/guides/basics/real-time.rst:29
msgid "After installing"
msgstr "安装后"

#: ../../source/guides/basics/real-time.rst:35
msgid ""
"The Socket.io transport can be configured and used with a standard "
"configuration like this:"
msgstr ""
"可以配置Socket.io传输并使用这样的标准配置:"

#: ../../source/guides/basics/real-time.rst:52
msgid "It also works in combination with a REST API setup:"
msgstr "它还与REST API设置结合使用:"

#: ../../source/guides/basics/real-time.rst:79
msgid "Channels"
msgstr "通道"

#: ../../source/guides/basics/real-time.rst:81
msgid ""
"Channels determine which real-time events should be sent to which client."
" For example, we might want to only send messages to authenticated users "
"or users in the same room. For this example however, we will just enable "
"real-time functionality for all connections:"
msgstr "通道确定应将哪些实时事件发送到哪个客户端. 例如, 我们可能只想向同一房间中经过身份验证的用户或用户发送消息. 但是, 对于此示例, 我们将仅为所有连接启用实时功能:"

#: ../../source/guides/basics/real-time.rst:96
msgid ""
"More information about channels can be found in the "
":doc:`../../api/channels`."
msgstr "有关频道的更多信息, 请参阅 :doc:`../../api/channels`."

#: ../../source/guides/basics/real-time.rst:100
msgid "A messages API"
msgstr "消息API"

#: ../../source/guides/basics/real-time.rst:102
msgid ""
"Putting it all together, our REST and real-time API with a messages "
"service ``app.js`` looks like this:"
msgstr ""
"总而言之, 我们的REST和带有消息服务 ``app.js`` 的实时API看起来像这样:"

#: ../../source/guides/basics/real-time.rst:147
msgid "As always, we can start our server again by running"
msgstr "与往常一样, 我们可以通过运行再次启动我们的服务器"

#: ../../source/guides/basics/real-time.rst:154
msgid "Using the API"
msgstr "使用API"

#: ../../source/guides/basics/real-time.rst:156
msgid ""
"The real-time API can be used by establishing a websocket connection. For"
" that we need the Socket.io client which we can include by updating "
"``public/index.html`` to:"
msgstr ""
"可以通过建立websocket连接来使用实时API. 为此我们需要Socket.io客户端, 我们可以通过更新 ``public/index.html`` 来包含它:"

#: ../../source/guides/basics/real-time.rst:178
msgid ""
"Then we can initialize and use the socket directly making some calls and "
"listening to real-time events by updating ``public/client.js`` to this:"
msgstr ""
"然后我们可以通过将 ``public/client.js`` 更新为此来初始化并使用套接字直接进行一些调用并监听实时事件:"

#: ../../source/guides/basics/real-time.rst:204
msgid "What’s next?"
msgstr "下一步是什么?"

#: ../../source/guides/basics/real-time.rst:206
msgid ""
"In this chapter we added the Socket.io transport and saw how to use "
"channels to send events from server to client. In the :doc:`clients` we "
"will look at how to use the browser Feathers application and client "
"services to handle these events easily."
msgstr "在本章中, 我们添加了Socket.io传输, 并了解了如何使用通道将事件从服务器发送到客户端. 在 :doc:`clients` 中, 我们将了解如何使用浏览器Feathers应用程序和客户端服务轻松处理这些事件. "

#~ msgid ""
#~ "To allow real-time communication with"
#~ " clients we need a transport that "
#~ "supports bi-directional communication. In "
#~ "Feathers those are the :doc:`../api/socketio`"
#~ " and :doc:`../../api/primus` transport both "
#~ "of which use `websockets "
#~ "<https://developer.mozilla.org/en-"
#~ "US/docs/Web/API/WebSockets_API>`_ to receive "
#~ "real-time events *and also* call "
#~ "service methods."
#~ msgstr ""

#~ msgid ""
#~ "**Important:** The :doc:`./rest` does not "
#~ "support real-time updates. Since socket"
#~ " transports also allow to call "
#~ "service methods and generally perform "
#~ "better, we recommend using a real-"
#~ "time transport whenever possible."
#~ msgstr ""

#~ msgid ""
#~ "In this chapter we added the "
#~ "Socket.io transport and saw how to "
#~ "use channels to send events from "
#~ "server to client. In the `next "
#~ "chapter <./clients.md>`_ we will look at"
#~ " how to use the browser Feathers "
#~ "application and client services to "
#~ "handle these events easily."
#~ msgstr ""

#~ msgid ""
#~ "In this chapter we added the "
#~ "Socket.io transport and saw how to "
#~ "use channels to send events from "
#~ "server to client. In the :doc:`next "
#~ "chapter <./clients>`_ we will look at"
#~ " how to use the browser Feathers "
#~ "application and client services to "
#~ "handle these events easily."
#~ msgstr ""

#~ msgid ""
#~ "To allow real-time communication with"
#~ " clients we need a transport that "
#~ "supports bi-directional communication. In "
#~ "Feathers those are the :doc:`../api/socketio`"
#~ " and :doc:`../api/primus` transport both of"
#~ " which use `websockets "
#~ "<https://developer.mozilla.org/en-"
#~ "US/docs/Web/API/WebSockets_API>`_ to receive "
#~ "real-time events *and also* call "
#~ "service methods."
#~ msgstr ""

#~ msgid ""
#~ "In this chapter we added the "
#~ "Socket.io transport and saw how to "
#~ "use channels to send events from "
#~ "server to client. In the :doc:`next "
#~ "chapter <./clients>` we will look at "
#~ "how to use the browser Feathers "
#~ "application and client services to "
#~ "handle these events easily."
#~ msgstr ""

